{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Icon.js","components/utilities/Modal.js","components/utilities/Button.js","components/FooterModal/Welcome.js","components/FooterModal/index.js","i18n/strings.js","components/utilities/Select.js","components/Footer.js","components/utilities/Form.js","components/utilities/Dropdown.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/secrets/onestlatech.png","components/utilities/Tabs.js","components/secrets/caisse.jpg","components/secrets/PhilippeMartinez.js","components/secrets/SecretShow.js","i18n/helpers.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","showShortpass","canITryShortLogin","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","createUser","username","password","confirmPassword","dispatch","setTimeout","newUser","then","catch","message","startsWith","loginUser","token","console","time","loginUserProgress","options","totp","shortLogin","metadata","metadatas","getState","constructor","prevStatus","AppUI","total","Math","round","timeEnd","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","SIZES","small","base","Icon","this","props","size","className","classNames","width","height","xlinkHref","Component","defaultProps","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","undefined","onClick","children","Body","Header","title","Footer","Button","handleClick","bind","disabled","buttonStyle","to","form","tabIndex","Welcome","href","target","rel","role","FooterModal","showModal","acknowledgedVersion","hideNews","news","map","change","description","version","acknowledgeVersion","getStrings","locale","messages","getSupportedBrowserLocale","navigator","language","supportedLocales","en","fr","login","alreadyHaveAccount","SignInSubtext","logout","dontHaveAccount","SignUpSubtext","defaultLanguage","donate","all","settings","Title","Close","shareWarning","latest","oldest","Copy","Open","url","on","Details","History","Save","Cancel","Select","onChange","value","getValue","select","uniqueId","label","htmlFor","ref","option","noop","LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY","showNews","setState","localStorage","setItem","commit","SECRETIN_APP_COMMIT","getItem","newLanguage","onChangeLanguage","fetch","response","json","data","foundAcknowledgedVersion","changelog","push","shortCommit","substr","entries","onChangeUserLanguage","Form","onSubmit","e","preventDefault","autoComplete","style","display","Dropdown","MenuItem","Input","handleChange","onTogglePasswordShow","autoCompleteSelected","showPassword","autoSelect","input","autoFocus","focus","event","placeholder","readOnly","inputProps","autoCompleteFromList","filteredAutoCompleteList","elem","toLowerCase","open","Boolean","Menu","slice","onSelect","handleAutoCompleteSelect","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","isOnline","db","src","alt","shortLoginExpired","info","isEmpty","connect","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","shortLoginActivationDate","getShortLoginActivationDate","expirationEstimation","moment","add","fromNow","UserConnect","isBefore","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","format","Sidebar","useSelector","exact","reload","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","getRaw","defaultFields","reduce","record","field","addNewField","output","key","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","friendList","Set","metadatum","knownFriendList","Array","from","sort","getInitialState","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","a","updateSecretStart","editSecret","getHistory","history","log","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","tab","isUpdating","historyDepth","_handleError","ShowSecretUISlice","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","getSecret","secretWithData","isEditing","EditSecretUISlice","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","onGenerateAlphanum","onGeneratePronounceable","copyToClipboard","debug","Utils","PasswordGenerator","generatePassword","contentRules","numbers","mixedCase","symbols","readable","isNew","intl","formatMessage","canUpdate","pullRight","Toggle","injectIntl","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","WindowsSecretEdit","ShowSecretUI","ShowSecretUIActions","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","BootstrapTab","StrikePlaceholder","fontFamily","justifyContent","alignItems","flexDirection","textAlign","OnEstLaTech","CaisseDeGreve","fontSize","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","getLocale","setMomentLocale","cache","createIntlCache","createIntl","createWithDefaultFields","NewSecretUISlice","loginIndex","passwordIndex","defaultUsername","changeTitle","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","OptionsSlice","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeDefaultUsernameSuccess","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","changeDefaultUsername","editOption","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","hashedTitle","rHashedTitle","defaultProgress","parseGroup","group","progress","entryPromises","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","secretinDB","importDb","isSecretin","JSON","importers","importType","importing","importStatus","importTotal","success","ImportSlice","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","buildSecretURL","basePath","urljoin","join","UserAvatars","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","canBeDeleted","divider","m","itemTarget","drop","monitor","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","SecretListItemFolderTarget","DropTarget","dropTarget","useDispatch","SecretListItem","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","unshift","SecretListFolderInfo","colSpan","SecretListContent","allFolders","fuzzyRegexp","RegExp","searchQuery","c","escapeRegExp","filteredSecrets","secrets","test","filteredFolders","sortedFolderRows","getUser","filtered","set","currentFolder","currentFolderDetails","fold","sortedFolders","b","localeCompare","rowType","rowData","flat","renderFilteredRow","index","renderStandardRow","getRowHeight","rowHeight","rowRenderer","rowCount","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","showAddFolder","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","_state","SecretList","onSearch","showAll","showMine","showShared","endDecrypt","DragDropContext","HTML5Backend","DragLayer","getFolders","defaultMemoize","path","previousVal","currentVal","equal","SecretListContainer","match","mySecrets","sharedSecrets","folderSecrets","f","ShortLoginShow","nextProps","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","onChangeDefaultUsername","onSaveDefaultUsername","parseInt","toString","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","nextState","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","defaultLocale","basename","forceUpdate","hostname","rootEl","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18e2fe03.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.showShortpass = secretin.canITryShortLogin();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  window.location.reload();\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        if (error.message.startsWith('The password')) {\n          return dispatch(\n            createUserFailure({\n              error: { password: error.message },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  console.time('decrypt');\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => (dispatch, getState) => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus: {\n      const prevStatus = getState().AppUI.status;\n      if (prevStatus) {\n        const { state, total } = prevStatus;\n        if (\n          state &&\n          total &&\n          Math.round((status.state / status.total) * 100) ===\n            Math.round((state / total) * 100)\n        ) {\n          return; // Progress % did not change, prevent dispatch\n        }\n      }\n      return dispatch(onLoginUserProgress({ status }));\n    }\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      console.timeEnd('decrypt');\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Expired shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Modal from 'components/utilities/Modal';\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <>\n        <Modal.Header title=\"Welcome to Secret-in.me\" />\n        <Modal.Body>\n          <div>\n            <p>\n              <a\n                href=\"https://my.secret-in.me\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Secret-in.me\n              </a>{' '}\n              is a team-oriented{' '}\n              <a\n                href=\"https://github.com/secretin\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                open source\n              </a>{' '}\n              password manager with a focus on transparency, usability and\n              security.\n            </p>\n            <p>\n              If it&apos;s your first time here, you can create a user and start\n              saving your secrets.\n            </p>\n            <p>\n              Be careful, all your secrets will be protected by the password you\n              pick. There is <b>no way</b> to retrieve your secrets if you\n              forget your password !\n            </p>\n            <p>\n              This secret manager is freely provided with{' '}\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              by{' '}\n              <a\n                href=\"https://bug.builders\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Bug Builders.\n              </a>\n            </p>\n            <p>\n              If you enjoy it, please consider{' '}\n              <a\n                href=\"https://donorbox.org/secret-in-me/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>donating !</b>\n              </a>{' '}\n            </p>\n            <p>It&apos;ll help us support hosting costs (~50$ per month).</p>\n          </div>\n        </Modal.Body>\n      </>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Welcome from 'components/FooterModal/Welcome';\nimport { FormattedMessage } from 'react-intl';\n\nconst propTypes = {\n  hideNews: PropTypes.func,\n  acknowledgeVersion: PropTypes.func,\n  acknowledgedVersion: PropTypes.string,\n  news: PropTypes.array,\n  showModal: PropTypes.bool,\n};\n\nclass FooterModal extends Component {\n  render() {\n    return (\n      <Modal\n        show={this.props.showModal}\n        onClose={\n          this.props.acknowledgedVersion === null ? false : this.props.hideNews\n        }\n      >\n        {this.props.acknowledgedVersion === null ? (\n          <Welcome />\n        ) : (\n          <>\n            <Modal.Header title=\"What's new ?\" />\n            <Modal.Body>\n              {this.props.news.map(change => (\n                <div key={change.version}>\n                  <h2>{change.title}</h2>\n                  <p>{change.description}</p>\n                </div>\n              ))}\n            </Modal.Body>\n          </>\n        )}\n\n        <Modal.Footer>\n          {this.props.acknowledgedVersion !== null && (\n            <Button\n              type=\"reset\"\n              buttonStyle=\"default\"\n              onClick={this.props.hideNews}\n            >\n              <FormattedMessage id=\"Close\" />\n            </Button>\n          )}\n          <Button type=\"submit\" onClick={this.props.acknowledgeVersion}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nFooterModal.propTypes = propTypes;\n\nexport default FooterModal;\n","export function getStrings(locale) {\n  return messages[locale];\n}\n\nexport function getSupportedBrowserLocale() {\n  if (!window.navigator.language) return 'en';\n  if (supportedLocales[window.navigator.language])\n    return window.navigator.language;\n  return 'en';\n}\n\nexport const supportedLocales = {\n  en: 'English',\n  fr: 'Français',\n};\n\nexport const messages = {\n  en: {\n    login: 'Username',\n    password: 'Password',\n    'Sign up': 'Sign up',\n    'Sign in': 'Sign in',\n    confirmPassword: 'Confirm password',\n    alreadyHaveAccount: 'I already have an account',\n    SignInSubtext: 'sign in',\n    logout: 'Log out',\n    dontHaveAccount: \"I don't have an account\",\n    SignUpSubtext: 'create one',\n    defaultLanguage: 'Language',\n    donate: 'Donate',\n    all: 'All',\n    'my secrets': 'My secrets',\n    'shared secrets': 'Shared secrets',\n    settings: 'Settings',\n    'export secrets': 'Export secrets',\n    'import secrets': 'Importer secrets',\n    'new secret': 'Secret',\n    'new folder': 'Folder',\n    search: 'Search...',\n    'Last modified': 'Last modified',\n    'Shared with': 'Shared with',\n    Title: 'Title',\n    'create folder title': 'Add new folder',\n    'create secret title': 'Add new secret',\n    'add folder button': 'Add folder',\n    'add secret button': 'Add secret',\n    Close: 'Close',\n    shareWarning: 'You are about to give',\n    latest: '(latest)',\n    oldest: '(oldest)',\n    'Secret title': 'Secret title',\n    Copy: 'Copy',\n    Open: 'Open',\n    url: 'url',\n    to: 'to',\n    on: 'on',\n    'Share the secret': 'Share the secret',\n    'Read only': 'Read only',\n    'Read and write': 'Read and write',\n    'Read, write and share': 'Read, write and share',\n    \"You don't have the permission to share this secret\":\n      \"You don't have the permission to share this secret\",\n    \"You can't modify or remove yourself\":\n      \"You can't modify or remove yourself\",\n    'Generate strong': 'Generate strong',\n    'Generate alphanumeric': 'Generate alphanumeric',\n    'Generate pronounceable': 'Generate pronounceable',\n    Details: 'Details',\n    'Who has access': 'Who has access',\n    History: 'History',\n    Save: 'Save',\n    'Untitled secret': 'Untitled secret',\n    'Untitled folder': 'Untitled folder',\n    'Folder title': 'Folder title',\n    Cancel: 'Cancel',\n  },\n  fr: {\n    login: \"Nom d'utilisateur\",\n    password: 'Mot de passe',\n    'Sign up': 'Créer un compte',\n    'Sign in': 'Se connecter',\n    logout: 'Déconnexion',\n    confirmPassword: 'Confirmer le mot de passe',\n    alreadyHaveAccount: \"J'ai déjà un compte\",\n    SignInSubtext: 'me connecter',\n    dontHaveAccount: \"Je n'ai pas de compte\",\n    SignUpSubtext: \"m'enregistrer\",\n    defaultLanguage: \"Langue de l'interface\",\n    donate: 'Faire un don',\n    all: 'Tous les secrets',\n    'my secrets': 'Mes secrets',\n    'shared secrets': 'Secrets partagés',\n    settings: 'Paramètres',\n    'export secrets': 'Exporter mes secrets',\n    'import secrets': 'Importer des secrets',\n    'new secret': 'Secret',\n    'new folder': 'Dossier',\n    search: 'Rechercher...',\n    'Last modified': 'Dernière modification',\n    'Shared with': 'Partagé avec',\n    Title: 'Titre',\n    'create folder title': \"Ajout d'un dossier\",\n    'create secret title': \"Ajout d'un secret\",\n    'Folder title': 'Titre du dossier',\n    'Secret title': 'Titre du secret',\n    Cancel: 'Annuler',\n    'add folder button': 'Créer le dossier',\n    'add secret button': 'Créer le secret',\n    Copy: 'Copier',\n    'Untitled folder': 'Dossier sans titre',\n    'Untitled secret': 'Secret sans titre',\n    Open: 'Ouvrir',\n    Close: 'Fermer',\n    Details: 'Détails',\n    'Who has access': 'Partage',\n    History: 'Historique',\n    Save: 'Sauvegarder',\n    'read access': 'lecture',\n    'read and write access': 'lecture et écriture',\n    'read, write and share access': 'lecture, écriture et partage',\n    'Are you sure?': 'Êtes-vous sûr·e ?',\n    shareWarning: 'Vous vous apprêtez à donner les droits de',\n    to: 'à',\n    on: 'sur',\n    'Share the secret': 'Partager le secret',\n    'Read only': 'Lecture seule',\n    'Read and write': 'Lecture et écriture',\n    'Read, write and share': 'Lecture, écriture et partage',\n    \"You don't have the permission to share this secret\":\n      \"Vous n'avez pas la permission de partager ce secret\",\n    \"You can't modify or remove yourself\":\n      'Vous ne pouvez pas modifier vos propres permissions',\n    'Generate strong': 'Mot de passe fort',\n    'Generate alphanumeric': 'Mot de passe alphanumérique',\n    'Generate pronounceable': 'Mot de passe prononçable',\n    latest: '(le plus récent)',\n    oldest: '(le plus ancien)',\n    url: 'url',\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Secretin from 'secretin';\nimport FooterModal from 'components/FooterModal/index';\nimport { supportedLocales, getSupportedBrowserLocale } from '../i18n/strings';\nimport Select from 'components/utilities/Select';\n\nconst LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY = 'Secret-in:acknowledgedVersion';\nconst DEFAULT_DEVELOP_COMMITISH = 'develop';\n\nclass Footer extends Component {\n  static propTypes = {\n    onChangeLanguage: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n    // eslint-disable-next-line no-undef\n    const commit = SECRETIN_APP_COMMIT;\n\n    const acknowledgedVersion = window.localStorage.getItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY\n    );\n\n    this.state = {\n      commit,\n      acknowledgedVersion,\n      news: [],\n      showModal: acknowledgedVersion ? false : true,\n      defaultLanguage:\n        localStorage.getItem('defaultLanguage') || getSupportedBrowserLocale(),\n    };\n  }\n\n  showNews = () => this.setState({ showModal: true });\n\n  hideNews = () => this.setState({ showModal: false });\n\n  onChangeUserLanguage(newLanguage) {\n    localStorage.setItem('defaultLanguage', newLanguage);\n    this.setState({\n      defaultLanguage: newLanguage,\n    });\n    this.props.onChangeLanguage();\n  }\n\n  acknowledgeVersion = () => {\n    window.localStorage.setItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY,\n      this.state.commit\n    );\n    this.setState({\n      news: [],\n      acknowledgeVersion: this.state.commit,\n      showModal: false,\n    });\n  };\n\n  componentDidMount() {\n    if (this.state.acknowledgedVersion === null) {\n      return;\n    }\n\n    const somethingNew =\n      this.state.commit !== DEFAULT_DEVELOP_COMMITISH &&\n      this.state.acknowledgedVersion !== this.state.commit;\n    if (somethingNew) {\n      fetch(\n        'https://raw.githubusercontent.com/secretin/secretin-website/develop/changelog.json'\n      )\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          const news = [];\n          let foundAcknowledgedVersion = false;\n          for (const change of data.changelog) {\n            if (change.version === this.state.acknowledgedVersion) {\n              foundAcknowledgedVersion = true;\n              break;\n            }\n            news.push(change);\n          }\n\n          if (foundAcknowledgedVersion) {\n            this.setState({ news });\n          } else {\n            // If we didn't find the acknowledged version, then we didn't updated changelog properly\n            // we will just show the last change then\n            this.setState({ news: [data.changelog[0]] });\n          }\n        })\n        .catch(() => {\n          // Ignore error\n        });\n    }\n  }\n\n  render() {\n    const shortCommit = this.state.commit ? this.state.commit.substr(0, 7) : '';\n    const { defaultLanguage } = this.state;\n\n    return (\n      <div className=\"footer\">\n        <FooterModal\n          news={this.state.news}\n          acknowledgeVersion={this.acknowledgeVersion}\n          acknowledgedVersion={this.state.acknowledgedVersion}\n          hideNews={this.hideNews}\n          showModal={this.state.showModal}\n        />\n        <span className=\"secretin-version\">\n          {this.state.news.length > 0 && (\n            <span className=\"new-in-secretin-version\" onClick={this.showNews}>\n              •\n            </span>\n          )}\n          <span className=\"secretin-version-text\">\n            secretin-app{' '}\n            <a\n              href={`https://github.com/secretin/secretin-app/commit/${this.state.commit}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {shortCommit}\n            </a>\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            secretin-lib v{Secretin.version}\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            <a\n              href=\"https://donorbox.org/secret-in-me/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              <b>\n                <FormattedMessage id=\"donate\" />\n              </b>\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n            </a>\n          </span>\n        </span>\n        <Select\n          value={defaultLanguage}\n          label={<FormattedMessage id=\"defaultLanguage\" />}\n          options={Object.entries(\n            supportedLocales\n          ).map(([localeValue, localeName]) => [localeValue, localeName])}\n          size=\"extra-small\"\n          title={'Preferred language'}\n          onChange={({ value }) => this.onChangeUserLanguage(value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport Dropdown from 'components/utilities/Dropdown';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    autoCompleteFromList: PropTypes.array,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    autoCompleteFromList: [],\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      autoCompleteSelected: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    if (this.state.autoCompleteSelected) {\n      this.setState({ autoCompleteSelected: false });\n    }\n\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  handleAutoCompleteSelect(value) {\n    this.setState({ autoCompleteSelected: true });\n    this.props.onChange({ name: this.props.name, value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n      autoCompleteFromList,\n    } = this.props;\n\n    const filteredAutoCompleteList =\n      this.props.value.length > 0\n        ? autoCompleteFromList.filter(elem =>\n            elem.toLowerCase().includes(this.props.value.toLowerCase())\n          )\n        : [];\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? 'on' : 'off'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {!this.state.autoCompleteSelected &&\n            filteredAutoCompleteList.length > 0 && (\n              <Dropdown\n                id=\"input--auto-complete-list\"\n                open={Boolean(this.props.value.length > 0)}\n              >\n                <Dropdown.Menu>\n                  {filteredAutoCompleteList.slice(0, 5).map(elem => (\n                    <Dropdown.MenuItem\n                      key={elem}\n                      onSelect={() => this.handleAutoCompleteSelect(elem)}\n                    >\n                      {elem}\n                    </Dropdown.MenuItem>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n    savedUsername: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: props.savedUsername,\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? (\n      <FormattedMessage id=\"Sign up\" />\n    ) : (\n      <FormattedMessage id=\"Sign in\" />\n    );\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '70%' }}\n            alt=\"logo\"\n            title={this.props.isOnline ? 'Secret-In.me' : 'Offline'}\n          />\n        </h2>\n        <Input\n          name=\"username\"\n          label={<FormattedMessage id=\"login\" />}\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus={this.props.savedUsername === ''}\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label={<FormattedMessage id=\"password\" />}\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoFocus={this.props.savedUsername !== ''}\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label={<FormattedMessage id=\"confirmPassword\" />}\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        {this.props.errors.shortLoginExpired && (\n          <h3 className=\"tooltip\">\n            {this.props.errors.shortLoginExpired.message}\n            <Icon id=\"info\" size={13} />\n            <span className=\"tooltiptext\">\n              {this.props.errors.shortLoginExpired.info}\n            </span>\n          </h3>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                <FormattedMessage id=\"alreadyHaveAccount\" />\n                ,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  <FormattedMessage id=\"SignInSubtext\" />\n                </a>\n              </span>\n            ) : (\n              <span>\n                <FormattedMessage id=\"dontHaveAccount\" />\n                ,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  <FormattedMessage id=\"SignUpSubtext\" />\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport moment from 'moment';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const expirationEstimation = shortLoginActivationDate\n      ? ' (expires ' +\n        moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .fromNow() +\n        ')'\n      : '';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n        <Input\n          label={`Shortpass${expirationEstimation}`}\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\nimport moment from 'moment';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors, showShortpass } = this.props;\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const shortLoginExpired = shortLoginActivationDate\n      ? moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .isBefore(moment())\n      : false;\n\n    return (\n      <div className=\"user-connect\">\n        {showShortpass && !shortLoginExpired ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm\n            loading={loading}\n            savedUsername={savedUsername ? savedUsername : ''}\n            errors={{\n              ...errors,\n              ...(shortLoginActivationDate && shortLoginExpired\n                ? {\n                    shortLoginExpired: {\n                      message: `Your shortpass has expired `,\n                      info: `Previous shortpass will automatically reactivate for your account ${savedUsername} if you sign-in.`,\n                    },\n                  }\n                : {}),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass, status } = state.AppUI;\n  return {\n    showShortpass,\n    status,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '100%' }}\n            alt=\"logo\"\n            title={isOnline ? 'Secret-In.me' : 'Offline'}\n          ></img>\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            <FormattedMessage id=\"all\" />\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            <FormattedMessage id=\"my secrets\" />\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            <FormattedMessage id=\"shared secrets\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            <FormattedMessage id=\"settings\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              <FormattedMessage id=\"export secrets\" />\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            <FormattedMessage id=\"import secrets\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a\n              className=\"sidebar-menu-link\"\n              onClick={() => window.location.reload()}\n            >\n              <Icon id=\"logout\" size=\"base\" />\n              <FormattedMessage id=\"logout\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce((record, field) => {\n      return record.addNewField(field);\n    }, new SecretDataRecord());\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n  const friendList = new Set();\n  Object.values(metadata).forEach(metadatum => {\n    Object.values(metadatum.users).forEach(user => {\n      friendList.add(user.username);\n    });\n  });\n  state.knownFriendList = Array.from(friendList).sort();\n};\n\nfunction getInitialState() {\n  return {\n    metadata: [],\n  };\n}\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: getInitialState(),\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  console.time('refresh');\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      console.timeEnd('refresh');\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nfunction getInitialState() {\n  return {\n    isEditing: false,\n    data: null,\n  };\n}\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Dropdown from 'components/utilities/Dropdown';\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.onGenerateAlphanum = this.onGenerateAlphanum.bind(this);\n    this.onGeneratePronounceable = this.onGeneratePronounceable.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword(),\n    });\n  }\n\n  onGenerateAlphanum() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword({\n        contentRules: {\n          numbers: true,\n          mixedCase: true,\n          symbols: false,\n        },\n      }),\n    });\n  }\n\n  onGeneratePronounceable() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword({\n        readable: true,\n      }),\n    });\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            <FormattedMessage id=\"Open\" />\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        <FormattedMessage id=\"Copy\" />\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.intl.formatMessage({ id: this.props.field.label })}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Dropdown id=\"password-generation-options\" pullRight>\n              <Dropdown.Toggle>\n                <Icon id=\"generate\" size=\"small\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.MenuItem onSelect={this.onGenerate}>\n                  <FormattedMessage id=\"Generate strong\" />\n                </Dropdown.MenuItem>\n                <Dropdown.MenuItem onSelect={this.onGenerateAlphanum}>\n                  <FormattedMessage id=\"Generate alphanumeric\" />\n                </Dropdown.MenuItem>\n                <Dropdown.MenuItem onSelect={this.onGeneratePronounceable}>\n                  <FormattedMessage id=\"Generate pronounceable\" />\n                </Dropdown.MenuItem>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SecretField);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && <FormattedMessage id=\"latest\" />}\n            {isOldest && <FormattedMessage id=\"oldest\" />}{' '}\n            {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'emerland',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'sun-flower',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n  intl: PropTypes.object,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n    intl,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [\n            rights,\n            intl.formatMessage({ id: userRightLabel(rights) }),\n          ])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport { injectIntl } from 'react-intl';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    knownFriendList: PropTypes.array,\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      this.props.intl.formatMessage({ id: 'read access' }),\n      this.props.intl.formatMessage({ id: 'read and write access' }),\n      this.props.intl.formatMessage({ id: 'read, write and share access' }),\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: this.props.intl.formatMessage({ id: 'Are you sure?' }),\n      text: (\n        <span>\n          {this.props.intl.formatMessage({ id: 'shareWarning' })}\n          &nbsp;<b>{rights}</b>&nbsp;\n          {this.props.intl.formatMessage({ id: 'to' })}\n          &nbsp;<b>{to}</b>&nbsp;\n          {this.props.intl.formatMessage({ id: 'on' })}\n          &nbsp;<b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: this.props.intl.formatMessage({ id: 'Share the secret' }),\n      cancelLabel: this.props.intl.formatMessage({ id: 'Cancel' }),\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder={`${this.props.intl.formatMessage({ id: 'login' })}...`}\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          autoCompleteFromList={this.props.knownFriendList}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [\n            rights,\n            this.props.intl.formatMessage({ id: userRightLabel(rights) }),\n          ])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { knownFriendList } = state.Metadata;\n  return {\n    knownFriendList,\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(SecretUserListNew));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser, intl) {\n  if (cantShare) {\n    return intl.formatMessage({\n      id: \"You don't have the permission to share this secret\",\n    });\n  } else if (isCurrentUser) {\n    return intl.formatMessage({ id: \"You can't modify or remove yourself\" });\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id,\n                this.props.intl\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n              intl={this.props.intl}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(SecretUserList));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","export default __webpack_public_path__ + \"static/media/onestlatech.123fef2c.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","export default __webpack_public_path__ + \"static/media/caisse.5a8425b5.jpg\";","import React from 'react';\n\nimport OnEstLaTech from './onestlatech.png';\nimport CaisseDeGreve from './caisse.jpg';\n\nexport function StrikePlaceholder() {\n  return (\n    <div\n      style={{\n        fontFamily: 'courier',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <img width={300} src={OnEstLaTech} />\n      <p>\n        <span style={{ fontWeight: 'bold' }}>Secret-in.me</span> s&apos;oppose\n        au projet de réforme des retraites profondément injuste défendu par le\n        gouvernement d&apos;Emmanuel Macron.\n      </p>\n      <img height={200} src={CaisseDeGreve} />\n      <p>\n        <a\n          style={{ fontWeight: 'bold', fontSize: 16 }}\n          href=\"https://caisse-solidarite.fr/\"\n        >\n          Faites un don à une caisse de grève\n        </a>{' '}\n        pour soutenir la lutte !\n      </p>\n      <p>Vos secrets reviendront dès le retrait de la réforme 😘</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nimport { StrikePlaceholder } from './PhilippeMartinez';\n\nconst MERGUEZ = true;\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={MERGUEZ ? 'Ce secret fait grève !' : this.props.secret.title}\n            canEditTitle={!MERGUEZ && canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {MERGUEZ ? (\n            <StrikePlaceholder />\n          ) : (\n            <>\n              {this.props.secret.type === 'windows' && (\n                <Flash type=\"info\">\n                  This secret is used for your Windows domain authentication. It\n                  cannot be deleted.\n                </Flash>\n              )}\n              <Tabs\n                id=\"secret-tabs\"\n                activeKey={this.props.tab}\n                onSelect={this.handleChangeTab}\n              >\n                {this.props.secret.type !== 'folder' && (\n                  <Tab\n                    eventKey=\"details\"\n                    title={this.props.intl.formatMessage({ id: 'Details' })}\n                  >\n                    {this.props.secret.type === 'windows' ? (\n                      <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                    ) : (\n                      <SecretEdit\n                        isUpdating={this.props.isUpdating}\n                        canUpdate={canUpdate}\n                        data={this.props.secret.fields}\n                      />\n                    )}\n                  </Tab>\n                )}\n\n                {this.props.secret.type !== 'windows' && (\n                  <Tab\n                    eventKey=\"access\"\n                    title={this.props.intl.formatMessage({\n                      id: 'Who has access',\n                    })}\n                  >\n                    <SecretUserList\n                      isUpdating={this.props.isUpdating}\n                      errors={this.props.errors}\n                      secret={this.props.secret}\n                    />\n                  </Tab>\n                )}\n\n                {this.props.secret?.history?.length > 1 && (\n                  <Tab\n                    eventKey=\"history\"\n                    title={this.props.intl.formatMessage({ id: 'History' })}\n                  >\n                    <SecretHistory />\n                  </Tab>\n                )}\n              </Tabs>\n            </>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            <FormattedMessage id={this.props.isEditing ? 'Cancel' : 'Close'} />\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              <FormattedMessage id=\"Save\" />\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(SecretShow));\n","import { getSupportedBrowserLocale } from './strings';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nexport const getLocale = () =>\n  localStorage.getItem('defaultLanguage') || getSupportedBrowserLocale();\n\nexport const setMomentLocale = () => moment.locale(getLocale());\n\nsetMomentLocale();\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport { createSecretSuccess, disconnectUserSuccess } from 'slices/AppUISlice';\nimport secretin from 'utils/secretin';\nimport { Utils } from 'secretin';\nimport { getLocale } from '../i18n/helpers';\nimport { getStrings } from '../i18n/strings';\n\nconst cache = createIntlCache();\n\nconst intl = createIntl(\n  {\n    locale: getLocale(),\n    messages: getStrings(getLocale()),\n  },\n  cache\n);\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = intl.formatMessage({\n        id: `Untitled ${isFolder ? 'folder' : 'secret'}`,\n      });\n      state.folder = folder;\n      state.isFolder = isFolder;\n      const loginIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'login'\n      );\n      const passwordIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'password'\n      );\n      state.data.fields[loginIndex].content =\n        secretin.currentUser.options?.defaultUsername ?? '';\n      state.data.fields[\n        passwordIndex\n      ].content = Utils.PasswordGenerator.generatePassword();\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport {\n  loginUserSuccess,\n  createUserSuccess,\n  disconnectUserSuccess,\n} from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeDefaultUsernameSuccess: (state, action) => {\n      const { defaultUsername } = action.payload;\n      state.options.defaultUsername = defaultUsername;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n    [createUserSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeDefaultUsernameSuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeDefaultUsername = ({ defaultUsername }) => (\n  dispatch,\n  getState\n) => {\n  secretin\n    .editOption('defaultUsername', defaultUsername)\n    .then(() => {\n      dispatch(changeDefaultUsernameSuccess({ defaultUsername }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n  extraReducers: {\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'AppUI/onLoginUserProgress',\n          'AppUI/loginUserSuccess',\n          'Metadata/addSecretToFolderSuccess',\n        ],\n        // Ignore these paths in the state\n        ignoredPaths: ['AppUI.currentUser', 'Metadata.metadata'],\n      },\n    }),\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  if (folder.root) return null;\n  return (\n    <div className=\"secret-list-folder\">\n      <div colSpan=\"4\" className=\"secret-list-folder-info\">\n        <SecretListBreadcrumb folders={folder.breadcrumb} withTitle={false} />\n      </div>\n    </div>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolderRows = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      let sortedFolders = Object.entries(filteredFolders).map(\n        ([id, folder]) => ({\n          ...folder,\n          id,\n        })\n      );\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n      sortedFolderRows = sortedFolders\n        .map(folder => {\n          const secrets = Object.values(folder.secrets);\n          secrets.sort((a, b) => {\n            if (a.title === null) return 1;\n            if (b.title === null) return -1;\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          });\n          return [\n            { rowType: 'header', rowData: folder },\n            ...secrets.map(secret => ({ rowType: 'row', rowData: secret })),\n          ];\n        })\n        .flat();\n    } else {\n      filteredSecrets.sort((a, b) => {\n        if (a.title === null) return 1;\n        if (b.title === null) return -1;\n        return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n      });\n    }\n\n    const renderFilteredRow = ({ index, key, style }) => {\n      const { rowType, rowData } = sortedFolderRows[index];\n      if (rowType === 'header') {\n        return (\n          <div key={key} style={style}>\n            <SecretListFolderInfo key={rowData.id} folder={rowData} />\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} style={style}>\n          <SecretListItemFolderSecret key={rowData.id} secret={rowData} />\n        </div>\n      );\n    };\n\n    const renderStandardRow = ({ index, key, style }) => {\n      const secret = filteredSecrets[index];\n      return (\n        <div key={key} style={style}>\n          <SecretListItem\n            key={secret.id}\n            secret={secret}\n            folders={this.props.folders}\n          />\n        </div>\n      );\n    };\n\n    const getRowHeight = ({ index }) => {\n      if (this.props.filtered && sortedFolderRows[index].rowType === 'header') {\n        const folder = sortedFolderRows[index].rowData;\n        if (folder.root) return 0;\n        return 75;\n      }\n      return 50;\n    };\n\n    return (\n      <div className={className}>\n        <AutoSizer>\n          {({ width, height }) => {\n            return (\n              <List\n                width={width}\n                height={height}\n                rowHeight={getRowHeight}\n                rowRenderer={\n                  this.props.filtered ? renderFilteredRow : renderStandardRow\n                }\n                rowCount={\n                  this.props.filtered\n                    ? sortedFolderRows.length\n                    : filteredSecrets.length\n                }\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header\n          title={\n            isFolder\n              ? this.props.intl.formatMessage({ id: 'create folder title' })\n              : this.props.intl.formatMessage({ id: 'create secret title' })\n          }\n        />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={\n                isFolder\n                  ? this.props.intl.formatMessage({ id: 'Folder title' })\n                  : this.props.intl.formatMessage({ id: 'Secret title' })\n              }\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            <FormattedMessage id=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? (\n              <FormattedMessage id=\"add folder button\" />\n            ) : (\n              <FormattedMessage id=\"add secret button\" />\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(SecretNew));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n  showAddFolder: PropTypes.bool,\n};\n\nfunction SecretListNew({ folder, showAddFolder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        <FormattedMessage id=\"new secret\" />\n      </Button>\n      {showAddFolder && (\n        <Button\n          title=\"Add folder\"\n          buttonStyle=\"primary\"\n          size=\"small\"\n          disabled={!canWrite}\n          onClick={() =>\n            dispatch(\n              NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n            )\n          }\n        >\n          <Icon id=\"add-folder\" size=\"small\" />\n          <FormattedMessage id=\"new folder\" />\n        </Button>\n      )}\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport { injectIntl } from 'react-intl';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder={this.props.intl.formatMessage({ id: 'search' })}\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SecretListSearch);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const status = _state.AppUI.status;\n  if (!status)\n    return {\n      show: false,\n    };\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    show: true,\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\nimport { FormattedMessage } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = <FormattedMessage id=\"all\" />;\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = <FormattedMessage id=\"my secrets\" />;\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = <FormattedMessage id=\"shared secrets\" />;\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        <UserConnectProgress />\n        <div className=\"page-content\">\n          <div className=\"page-content-actions\">\n            <SecretListNew\n              showAddFolder={\n                !this.props.showAll &&\n                !this.props.showMine &&\n                !this.props.showShared\n              }\n              folder={this.props.folder}\n            />\n          </div>\n          <div className=\"secret-list-content-table-header\">\n            <div>\n              <div className=\"secret-list-item-column--title\">\n                <FormattedMessage id=\"Title\" />\n              </div>\n              <div className=\"secret-list-item-column--last-modified\">\n                <FormattedMessage id=\"Last modified\" />\n              </div>\n              <div className=\"secret-list-item-column--shared-with\">\n                <FormattedMessage id=\"Shared with\" />\n              </div>\n              <div className=\"secret-list-item-column--actions\" />\n            </div>\n          </div>\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defaultMemoize } from 'reselect';\nimport equal from 'fast-deep-equal/es6';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nconst getFolders = defaultMemoize(\n  params => {\n    return params.path ? params.path.split('/') : [];\n  },\n  (previousVal, currentVal) => equal(previousVal, currentVal)\n);\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = getFolders(params);\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n    this.onChangeDefaultUsername = this.onChangeDefaultUsername.bind(this);\n    this.onSaveDefaultUsername = this.onSaveDefaultUsername.bind(this);\n    this.state = {\n      defaultUsername: props.options.defaultUsername,\n    };\n  }\n\n  onChangeDefaultUsername({ value }) {\n    this.setState({ defaultUsername: value });\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: value === '' ? -1 : parseInt(value, 10) || 0,\n    });\n  }\n\n  onSaveDefaultUsername() {\n    this.props.actions.changeDefaultUsername({\n      defaultUsername: this.state.defaultUsername,\n    });\n  }\n\n  render() {\n    const {\n      options,\n      isOnline,\n      options: { defaultUsername = '' },\n    } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Experience</h3>\n            <div className=\"options-section-item\">\n              <Input\n                name=\"defaultUsername\"\n                label=\"Default username\"\n                size=\"small\"\n                value={this.state.defaultUsername}\n                onChange={this.onChangeDefaultUsername}\n                disabled={!isOnline}\n              />\n              <div className=\"options-section-subitem-save\">\n                <Button\n                  type=\"button\"\n                  buttonStyle={\n                    this.state.defaultUsername === defaultUsername\n                      ? 'default'\n                      : 'primary'\n                  }\n                  onClick={this.onSaveDefaultUsername}\n                  size=\"small\"\n                  disabled={\n                    !isOnline || this.state.defaultUsername === defaultUsername\n                  }\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose !== 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {(options.timeToClose === -1 || options.timeToClose > 0) && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={\n                      options.timeToClose === -1\n                        ? ''\n                        : options.timeToClose.toString()\n                    }\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\nimport Footer from 'components/Footer';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nimport { IntlProvider } from 'react-intl';\nimport { getStrings } from '../i18n/strings';\nimport { getLocale, setMomentLocale } from '../i18n/helpers';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => window.location.reload(),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    setMomentLocale();\n    return (\n      <IntlProvider\n        locale={getLocale()}\n        defaultLocale={getLocale()}\n        messages={getStrings(getLocale())}\n      >\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            {this.props.connected ? (\n              <Layout />\n            ) : (\n              <UserConnect\n                savedUsername={this.props.savedUsername}\n                loading={this.props.loading}\n                errors={this.props.errors}\n              />\n            )}\n            <Footer onChangeLanguage={() => this.forceUpdate()} />\n          </div>\n        </Router>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './utils/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}