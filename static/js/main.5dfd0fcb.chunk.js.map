{"version":3,"sources":["../../secretin-lib/dist/adapters/browser.umd.js","../../secretin-lib/dist/secretin.umd.js","utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Icon.js","components/utilities/Modal.js","components/utilities/Button.js","components/FooterModal/Welcome.js","components/FooterModal/index.js","i18n/strings.js","components/utilities/Select.js","components/Footer.js","components/utilities/Form.js","components/utilities/Dropdown.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","i18n/helpers.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["exports","InvalidHexStringError","message","errorObject","this","hexStringToUint8Array","hexString","length","arrayBuffer","Uint8Array","i","byteValue","parseInt","substr","Number","isNaN","bytesToHexString","givenBytes","bytes","hexBytes","byteString","toString","push","join","asciiToUint8Array","str","chars","charCodeAt","bytesToASCIIString","reduce","charIndex","String","fromCharCode","getSHA256","algorithm","data","crypto","subtle","digest","then","hashedStr","genRSAOAEP","name","modulusLength","publicExponent","hash","extractable","keyUsages","generateKey","genRSAPSS","generateWrappingKey","encryptAESGCM256","secret","key","result","JSON","stringify","newKey","iv","getRandomValues","tagLength","encrypt","encryptedSecret","decryptAESGCM256","secretObject","decrypt","decryptedSecret","jsonStr","breakingPattern","parse","replace","encryptRSAOAEP","publicKey","decryptRSAOAEP","privateKey","wrapRSAOAEP","wrappingPublicKey","format","wrapAlgorithm","wrapKey","wrappedKey","sign","datas","signAlgorithm","saltLength","signature","verify","unwrapRSAOAEP","wrappedKeyHex","unwrappingPrivateKey","unwrappedKeyAlgorithm","unwrapAlgorithm","usages","unwrapKey","exportClearKey","exportKey","convertOAEPToPSS","keyUsage","OAEPKey","PSSKey","alg","key_ops","importKey","importPublicKey","jwkPublicKey","importPublicKeySign","derivePassword","password","parameters","passwordBuf","saltBuf","iterations","iterationsBuf","salt","deriveKeyAlgorithm","deriveKey","dKey","rawKey","hashedKey","wrappingKey","importPrivateKey","privateKeyObject","wrappedPrivateKey","importPrivateKeySign","keyObject","randomUUID","SecretinBrowserAdapter","Object","defineProperty","value","factory","module","version","owaspConfigs","allowPassphrases","maxLength","minLength","minPhraseLength","minOptionalTestsToPass","tests","Error","test","assertPasswordComplexity","forEach","testStrength","Error$1","XorSeedError","SomethingGoesWrong","ServerUnknownError","UserNotFoundError","UsernameAlreadyExistsError","NeedTOTPTokenError","DisconnectedError","InvalidSignatureError","DontHaveSecretError","FolderNotFoundError","FolderInItselfError","LocalStorageUnavailableError","InvalidPasswordError","CantEditSecretError","CantShareSecretError","CantUnshareSecretError","CantUnshareWithYourselfError","CantShareWithYourselfError","SecretAlreadyExistsError","SecretNotFoundError","CantGenerateNewKeyError","NotSharedWithUserError","FriendNotFoundError","OfflineError","NotAvailableError","WrappingError","error","constructor","Errors","Status","state","total","PasswordDerivationStatus","GetDerivationStatus","GetUserStatus","GetProtectKeyStatus","ImportPublicKeyStatus","DecryptPrivateKeyStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","EndDecryptMetadataStatus","DecryptMetadataStatus","ImportSecretStatus","Statuses","symbols","vowels","consonants","numbers","similarChars","generateRandomNumber","max","randomValues","escapeRegExp","s","hasNumber","match","hasMixedCase","toUpperCase","toLowerCase","hasSymbol","regexString","symbolRegex","RegExp","checkStrictRules","rules","mixedCase","buildCharset","options","charset","letters","contentRules","allowSimilarChars","filter","char","includes","filterCharset","excludedChars","getRandomPassword","readable","pronounceableConsonants","pronounceableVowels","lastCharWasVocal","Boolean","passwordChars","step","generatePassword","customOptions","strictRules","asciiToHexString","split","map","c","slice","hexStringToAscii","hexx","hex","generateRescueCodes","RESCUE_CODE_LENGTH","RESCUE_CODE_COUNT","rescueCodes","buf","rescueCodeSource","rescueCode","generateSeed","byte","shift","carry","output","alphabet","b32","raw","localStorageAvailable","storage","window","localStorage","x","setItem","removeItem","e","xorSeed","byteArray1","byteArray2","xorRescueCode","defaultProgress","status","seconds","Math","trunc","Date","now","console","log","SecretinPrefix","Utils","PasswordGenerator","API$1","db","users","secrets","username","isHashed","retrieveUser","hashedUsername","privateKeySign","publicKeySign","pass","rHashedUsername","Promise","resolve","reject","hashedHash","keys","user","hashedTitle","metadatas","history","iv_meta","iv_history","rev","rights","index","indexOf","splice","editOffline","wrappedKeys","friendNames","hashedFriendUsernames","hashedFriendUseramePromises","all","rHashedFriendUserames","hashedFriendUserame","yourself","nb","response","hashedFriendUsername","dbUser","id","sharedSecretObjects","sharedSecretObject","friendName","dbFriend","hashed","fakePrivateKey","fakeIV","fakeHash","totp","userObject","changePassword","metadataCache","newPass","User","cryptoAdapter","defaultOptions","keyPair","keyPairSign","isUsingLegacyKey","catch","protectKey","wrapped","encryptedOptions","verified","exportPrivateData","optionsObject","importPrivateData","friend","friendWrappedKey","lastModifiedAt","toISOString","lastModifiedBy","encryptSecret","saltedTitle","title","newMetadas","encryptedMetadata","encryptedHistory","metadata","decryptSecret","rSecret","rMetadata","decodeURIComponent","newHistory","Array","isArray","rHistory","unshift","encodeURIComponent","allMetadatas","progress","hashedTitles","progressStatus","promise","shortpass","deviceName","toSend","object","exportKeyPairSign","derived","deviceId","wrappedProtectKey","getItem","publicKeySignRaw","privateKeySignRaw","importKeyPairSign","timeToClose","writable","enumerable","configurable","Secretin","API","undefined","api","editableDB","currentUser","listeners","connectionChange","event","callback","callbackIndex","eventArgs","cacheKey","DbCacheStr","DbCache","oldApi","dispatchEvent","connection","testOnline","setTimeout","isOnline","process","getDb","doCacheActions","remote","local","conflictSecretsKey","conflictSecretsStr","conflictSecrets","cacheActionsKey","cacheActionsStr","updatedCacheActions","action","args","cacheActions","cacheAction","addSecret","popCacheAction","secretId","getConflict","encryptedContent","content","conflictSecretId","setConflict","editSecret","renameSecret","userExists","generateMasterKey","exportPrivateKey","objectPrivateKey","exportOptions","exportPublicKey","addUser","offlineDB","otp","forceSync","getDerivationParameters","getUser","remoteUser","deprecatedConvertOAEPToPSS","activateShortLogin","refreshUser","loginUser","newMetadata","decryptAllMetadatas","exportBigPrivateData","objectMetadataCache","editUser","rForceUpdate","forceUpdate","getUserWithSignature","importOptions","importBigPrivateData","updateMetadataCache","inFolderId","clearTitle","type","folders","ROOT","createSecret","encryptedMetadatas","pushCacheAction","addSecretToFolder","oldPassword","oldHash","getHistory","toEncrypt","resetOptions","hashedSecretTitle","hashedFolder","folderMetadatas","secretMetadatas","sharedSecretObjectsArray","getPublicKey","getSharedSecretObjects","metadatasUsers","commonParentToClean","getSecret","encryptedFolder","fullSharedSecretObjects","newSharedSecretObject","folder","inFolder","shareSecret","parentFolder","infos","currentSecret","metaUser","resetMetadatas","encryptedParentFolder","parentFolders","addUsername","newSecretObject","newTitle","sRights","wrapper","unshareFolderSecrets","unshareSecret","renewKey","rawSecret","hashedCurrentUsername","wrapKeyForFriend","usersToDelete","removeSecretFromFolder","diff","list","deleteFolderSecrets","deleteSecret","currentUsername","deactivateTotp","seed","protectedSeed","activateTotp","deactivateShortLogin","dateStr","getProtectKeyParameters","shortpassKey","getProtectKey","shortLogin","canITryShortLogin","protectedRescueCodes","postRescueCodes","getRescueCodes","revs","newDb","assign","newDbCacheStr","oldSecretin","jsonDB","oldDB","newHashedTitles","newHashedTitle","exportSecret","newSecret","oldFolders","newFolders","oldFolder","oldSecret","newSecretTitle","importSecret","reqData","path","timeout","xhr","XMLHttpRequest","open","encodeURI","setRequestHeader","onload","newData","responseText","reason","ontimeout","onerror","send","doGET","doPOST","doPUT","doDELETE","link","location","origin","json","sig","sigTime","url","secretObjects","token","Standalone","Server","URLSearchParams","search","get","secretin","_loading","loading","_endLoading","AppUISlice","createSlice","initialState","savedUsername","getSavedUsername","connected","online","errors","showShortpass","reducers","endLoading","createSecretSuccess","createSecretFailure","payload","disconnectUserSuccess","createUserSuccess","createUserFailure","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","createUser","confirmPassword","dispatch","newUser","startsWith","time","loginUserProgress","getState","prevStatus","AppUI","round","timeEnd","getAllSecrets","createSelector","Metadata","values","getMySecrets","allSecrets","find","getSecretsInFolder","folderId","userId","secretUser","getSharedSecrets","SIZES","small","base","Icon","props","size","className","classNames","width","height","xlinkHref","Component","defaultProps","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","onClick","children","Body","Header","Footer","Button","handleClick","bind","disabled","buttonStyle","to","form","tabIndex","Welcome","href","target","rel","role","FooterModal","showModal","acknowledgedVersion","hideNews","news","change","description","acknowledgeVersion","getStrings","locale","messages","getSupportedBrowserLocale","navigator","language","supportedLocales","en","fr","login","alreadyHaveAccount","SignInSubtext","logout","dontHaveAccount","SignUpSubtext","defaultLanguage","donate","settings","Title","Close","shareWarning","latest","oldest","Copy","Open","on","Details","History","Save","Cancel","Select","onChange","getValue","select","uniqueId","label","htmlFor","ref","option","noop","LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY","showNews","setState","commit","SECRETIN_APP_COMMIT","newLanguage","onChangeLanguage","fetch","foundAcknowledgedVersion","changelog","shortCommit","entries","onChangeUserLanguage","Form","onSubmit","preventDefault","autoComplete","style","display","Dropdown","MenuItem","Input","handleChange","onTogglePasswordShow","autoCompleteSelected","showPassword","autoSelect","input","autoFocus","focus","placeholder","readOnly","inputProps","autoCompleteFromList","filteredAutoCompleteList","elem","Menu","onSelect","handleAutoCompleteSelect","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","src","alt","shortLoginExpired","info","isEmpty","connect","Confirm","handleAccept","handleCancel","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortlogin","shortLoginActivationDate","getShortLoginActivationDate","expirationEstimation","moment","add","fromNow","UserConnect","isBefore","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","click","removeChild","download","Sidebar","useSelector","exact","reload","SecretFieldRecord","uuid","v4","date","rawData","SecretDataRecord","fields","params","getRaw","defaultFields","record","field","addNewField","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Secret","_user","accessRightForUser","_rebuildMetadata","buildSecrets","friendList","Set","metadatum","knownFriendList","from","sort","getInitialState","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","isFolder","addFolder","updateSecret","a","updateSecretStart","updateSecretFailure","createSecretUserRights","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","deleteSecretUserRightsFailure","removeSecretFromCurrentFolder","currentFolderId","tab","isUpdating","historyDepth","_handleError","ShowSecretUISlice","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","secretWithData","isEditing","EditSecretUISlice","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","onGenerateAlphanum","onGeneratePronounceable","copyToClipboard","debug","isNew","intl","formatMessage","canUpdate","pullRight","Toggle","injectIntl","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","ShowSecretUI","ShowSecretUIActions","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","substring","UserAvatar","colorIndex","sum","letter","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","eventKey","getLocale","setMomentLocale","cache","createIntlCache","createIntl","createWithDefaultFields","NewSecretUISlice","loginIndex","passwordIndex","defaultUsername","changeTitle","showQRCode","showShortLogin","showRescueCodes","newPass1","newPass2","OptionsSlice","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","changeDefaultUsernameSuccess","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","testTotp","err","toggleTotp","toggleShortLogin","toggleAutoLogout","changeTimeToClose","changeDefaultUsername","editOption","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","rHashedTitle","parseGroup","group","entryPromises","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","groups","keepass","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","secretinDB","importDb","isSecretin","importers","importType","importing","importStatus","importTotal","success","ImportSlice","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","buildSecretURL","basePath","urljoin","UserAvatars","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","canBeDeleted","divider","m","itemTarget","drop","monitor","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","SecretListItemFolderTarget","DropTarget","dropTarget","useDispatch","SecretListItem","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","SecretListFolderInfo","colSpan","SecretListContent","allFolders","fuzzyRegexp","searchQuery","filteredSecrets","filteredFolders","sortedFolderRows","filtered","set","currentFolder","currentFolderDetails","fold","sortedFolders","b","localeCompare","rowType","rowData","flat","renderFilteredRow","renderStandardRow","getRowHeight","rowHeight","rowRenderer","rowCount","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","showAddFolder","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","_state","SecretList","onSearch","showAll","showMine","showShared","endDecrypt","DragDropContext","HTML5Backend","DragLayer","getFolders","defaultMemoize","previousVal","currentVal","equal","SecretListContainer","mySecrets","sharedSecrets","folderSecrets","f","ShortLoginShow","nextProps","OptionsActions","QRCodeShow","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","onChangeDefaultUsername","onSaveDefaultUsername","min","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","nextState","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","defaultLocale","basename","hostname","rootEl","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5dfd0fcb.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.SecretinBrowserAdapter = {}));\n})(this, (function (exports) { 'use strict';\n\n  /* eslint-disable max-classes-per-file */\n  class Error {\n    constructor(errorObject) {\n      this.message = 'Unknown error';\n      if (typeof errorObject !== 'undefined') {\n        this.errorObject = errorObject;\n      } else {\n        this.errorObject = null;\n      }\n    }\n  }\n  class InvalidHexStringError extends Error {\n    constructor() {\n      super();\n      this.message = 'Invalid hexString';\n    }\n  }\n\n  /* eslint-disable no-bitwise */\n\n  function hexStringToUint8Array(hexString) {\n    if (hexString.length % 2 !== 0) {\n      throw new InvalidHexStringError();\n    }\n    const arrayBuffer = new Uint8Array(hexString.length / 2);\n\n    for (let i = 0; i < hexString.length; i += 2) {\n      const byteValue = parseInt(hexString.substr(i, 2), 16);\n      if (Number.isNaN(byteValue)) {\n        throw new InvalidHexStringError();\n      }\n      arrayBuffer[i / 2] = byteValue;\n    }\n\n    return arrayBuffer;\n  }\n\n  function bytesToHexString(givenBytes) {\n    if (!givenBytes) {\n      return null;\n    }\n\n    const bytes = new Uint8Array(givenBytes);\n    const hexBytes = [];\n\n    for (let i = 0; i < bytes.length; i += 1) {\n      let byteString = bytes[i].toString(16);\n      if (byteString.length < 2) {\n        byteString = `0${byteString}`;\n      }\n      hexBytes.push(byteString);\n    }\n    return hexBytes.join('');\n  }\n\n  function asciiToUint8Array(str) {\n    const chars = [];\n    for (let i = 0; i < str.length; i += 1) {\n      chars.push(str.charCodeAt(i));\n    }\n    return new Uint8Array(chars);\n  }\n\n  function bytesToASCIIString(bytes) {\n    // String.fromCharCode.apply(null, new Uint8Array(bytes)) trigger Maximum call stack size exceeded\n    const array = new Uint8Array(bytes);\n    return array.reduce(\n      (str, charIndex) => str + String.fromCharCode(charIndex),\n      ''\n    );\n  }\n\n  function getSHA256(str) {\n    const algorithm = 'SHA-256';\n    const data = asciiToUint8Array(str);\n    return crypto.subtle\n      .digest(algorithm, data)\n      .then((hashedStr) => bytesToHexString(hashedStr));\n  }\n\n  function genRSAOAEP() {\n    const algorithm = {\n      name: 'RSA-OAEP',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['wrapKey', 'unwrapKey', 'encrypt', 'decrypt'];\n    return crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n  }\n\n  function genRSAPSS() {\n    const algorithm = {\n      name: 'RSA-PSS',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['sign', 'verify'];\n    return crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n  }\n\n  function generateWrappingKey() {\n    const algorithm = {\n      name: 'AES-CBC',\n      length: 256,\n    };\n\n    const extractable = true;\n    const keyUsages = ['wrapKey', 'unwrapKey'];\n\n    return crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n  }\n\n  function encryptAESGCM256(secret, key) {\n    const result = {};\n    let algorithm = {};\n    const data = asciiToUint8Array(JSON.stringify(secret));\n    if (typeof key === 'undefined') {\n      algorithm = {\n        name: 'AES-GCM',\n        length: 256,\n      };\n      const extractable = true;\n      const keyUsages = ['encrypt'];\n      return crypto.subtle\n        .generateKey(algorithm, extractable, keyUsages)\n        .then((newKey) => {\n          const iv = new Uint8Array(12);\n          crypto.getRandomValues(iv);\n          algorithm = {\n            name: 'AES-GCM',\n            iv,\n            tagLength: 128,\n          };\n\n          result.key = newKey;\n          result.iv = bytesToHexString(iv);\n          return crypto.subtle.encrypt(algorithm, newKey, data);\n        })\n        .then((encryptedSecret) => {\n          result.secret = bytesToHexString(encryptedSecret);\n          return result;\n        });\n    }\n\n    result.key = key;\n    const iv = new Uint8Array(12);\n    crypto.getRandomValues(iv);\n    algorithm = {\n      name: 'AES-GCM',\n      iv,\n      tagLength: 128,\n    };\n    result.iv = bytesToHexString(iv);\n    return crypto.subtle.encrypt(algorithm, key, data).then((encryptedSecret) => {\n      result.secret = bytesToHexString(encryptedSecret);\n      return result;\n    });\n  }\n\n  function decryptAESGCM256(secretObject, key) {\n    const algorithm = {\n      name: 'AES-GCM',\n      iv: hexStringToUint8Array(secretObject.iv),\n      tagLength: 128,\n    };\n    const data = hexStringToUint8Array(secretObject.secret);\n    return crypto.subtle.decrypt(algorithm, key, data).then((decryptedSecret) => {\n      const jsonStr = bytesToASCIIString(decryptedSecret);\n      // eslint-disable-next-line no-control-regex\n      const breakingPattern = /[\\x01-\\x09\\x0B-\\x0C\\x0E-\\x1F]+/gi;\n      return JSON.parse(jsonStr.replace(breakingPattern, ''));\n    });\n  }\n\n  function encryptRSAOAEP(secret, publicKey) {\n    const algorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'SHA-256' },\n    };\n    const data = asciiToUint8Array(JSON.stringify(secret));\n    return crypto.subtle\n      .encrypt(algorithm, publicKey, data)\n      .then((encryptedSecret) => bytesToHexString(encryptedSecret));\n  }\n\n  function decryptRSAOAEP(secret, privateKey) {\n    const algorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'SHA-256' },\n    };\n    const data = hexStringToUint8Array(secret);\n    return crypto.subtle\n      .decrypt(algorithm, privateKey, data)\n      .then((decryptedSecret) => JSON.parse(bytesToASCIIString(decryptedSecret)));\n  }\n\n  function wrapRSAOAEP(key, wrappingPublicKey) {\n    const format = 'raw';\n    const wrapAlgorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'SHA-256' },\n    };\n    return crypto.subtle\n      .wrapKey(format, key, wrappingPublicKey, wrapAlgorithm)\n      .then((wrappedKey) => bytesToHexString(wrappedKey));\n  }\n\n  function sign(datas, key) {\n    const signAlgorithm = {\n      name: 'RSA-PSS',\n      saltLength: 32, // In byte\n    };\n    return crypto.subtle\n      .sign(signAlgorithm, key, asciiToUint8Array(datas))\n      .then((signature) => bytesToHexString(signature));\n  }\n\n  function verify(datas, signature, key) {\n    const signAlgorithm = {\n      name: 'RSA-PSS',\n      saltLength: 32, // In byte\n    };\n    return crypto.subtle.verify(\n      signAlgorithm,\n      key,\n      hexStringToUint8Array(signature),\n      asciiToUint8Array(datas)\n    );\n  }\n\n  function unwrapRSAOAEP(\n    wrappedKeyHex,\n    unwrappingPrivateKey,\n    unwrappedKeyAlgorithm = {\n      name: 'AES-GCM',\n      length: 256,\n    }\n  ) {\n    const format = 'raw';\n    const wrappedKey = hexStringToUint8Array(wrappedKeyHex);\n    const unwrapAlgorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'SHA-256' },\n    };\n\n    const extractable = true;\n    const usages = ['decrypt', 'encrypt', 'wrapKey', 'unwrapKey'];\n\n    return crypto.subtle.unwrapKey(\n      format,\n      wrappedKey,\n      unwrappingPrivateKey,\n      unwrapAlgorithm,\n      unwrappedKeyAlgorithm,\n      extractable,\n      usages\n    );\n  }\n\n  function exportClearKey(key) {\n    const format = 'jwk';\n    return crypto.subtle.exportKey(format, key);\n  }\n\n  function convertOAEPToPSS(key, keyUsage) {\n    return exportClearKey(key).then((OAEPKey) => {\n      const format = 'jwk';\n      const algorithm = {\n        name: 'RSA-PSS',\n        hash: { name: 'SHA-256' },\n      };\n      const extractable = false;\n      const keyUsages = [keyUsage];\n\n      const PSSKey = OAEPKey;\n      PSSKey.alg = 'PS256';\n      PSSKey.key_ops = keyUsages;\n\n      return crypto.subtle.importKey(\n        format,\n        PSSKey,\n        algorithm,\n        extractable,\n        keyUsages\n      );\n    });\n  }\n\n  function importPublicKey(jwkPublicKey) {\n    const format = 'jwk';\n    const algorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'SHA-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['wrapKey', 'encrypt'];\n    return crypto.subtle.importKey(\n      format,\n      jwkPublicKey,\n      algorithm,\n      extractable,\n      keyUsages\n    );\n  }\n\n  function importPublicKeySign(jwkPublicKey) {\n    const format = 'jwk';\n    const algorithm = {\n      name: 'RSA-PSS',\n      hash: { name: 'SHA-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['verify'];\n    return crypto.subtle.importKey(\n      format,\n      jwkPublicKey,\n      algorithm,\n      extractable,\n      keyUsages\n    );\n  }\n\n  function derivePassword(password, parameters) {\n    const result = {};\n\n    const passwordBuf = asciiToUint8Array(password);\n    let extractable = false;\n    let usages = ['deriveKey', 'deriveBits'];\n\n    return crypto.subtle\n      .importKey('raw', passwordBuf, { name: 'PBKDF2' }, extractable, usages)\n      .then((key) => {\n        let saltBuf;\n        let iterations;\n        if (typeof parameters === 'undefined') {\n          saltBuf = new Uint8Array(32);\n          crypto.getRandomValues(saltBuf);\n          const iterationsBuf = new Uint8Array(1);\n          crypto.getRandomValues(iterationsBuf);\n          iterations = 100000 + iterationsBuf[0];\n        } else {\n          saltBuf = hexStringToUint8Array(parameters.salt);\n          if (typeof parameters.iterations === 'undefined') {\n            iterations = 10000; // retrocompatibility\n          } else {\n            iterations = parameters.iterations;\n          }\n        }\n\n        result.salt = bytesToHexString(saltBuf);\n        result.iterations = iterations;\n\n        const algorithm = {\n          name: 'PBKDF2',\n          salt: saltBuf,\n          iterations,\n          hash: { name: 'SHA-256' },\n        };\n\n        const deriveKeyAlgorithm = {\n          name: 'AES-CBC',\n          length: 256,\n        };\n\n        extractable = true;\n        usages = ['wrapKey', 'unwrapKey'];\n\n        return crypto.subtle.deriveKey(\n          algorithm,\n          key,\n          deriveKeyAlgorithm,\n          extractable,\n          usages\n        );\n      })\n      .then((dKey) => {\n        result.key = dKey;\n        return crypto.subtle.exportKey('raw', dKey);\n      })\n      .then((rawKey) => crypto.subtle.digest('SHA-256', rawKey))\n      .then((hashedKey) => {\n        result.hash = bytesToHexString(hashedKey);\n        return result;\n      });\n  }\n\n  function exportKey(wrappingKey, key) {\n    const result = {};\n    const format = 'jwk';\n    const iv = new Uint8Array(16);\n    crypto.getRandomValues(iv);\n    const wrapAlgorithm = {\n      name: 'AES-CBC',\n      iv,\n    };\n    result.iv = bytesToHexString(iv);\n    return crypto.subtle\n      .wrapKey(format, key, wrappingKey, wrapAlgorithm)\n      .then((wrappedKey) => {\n        result.key = bytesToHexString(wrappedKey);\n        return result;\n      });\n  }\n\n  function importPrivateKey(key, privateKeyObject) {\n    const format = 'jwk';\n    const wrappedPrivateKey = hexStringToUint8Array(privateKeyObject.privateKey);\n    const unwrapAlgorithm = {\n      name: 'AES-CBC',\n      iv: hexStringToUint8Array(privateKeyObject.iv),\n    };\n    const unwrappedKeyAlgorithm = {\n      name: 'RSA-OAEP',\n      hash: { name: 'sha-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['unwrapKey', 'decrypt'];\n\n    return crypto.subtle.unwrapKey(\n      format,\n      wrappedPrivateKey,\n      key,\n      unwrapAlgorithm,\n      unwrappedKeyAlgorithm,\n      extractable,\n      keyUsages\n    );\n  }\n\n  function importPrivateKeySign(key, privateKeyObject) {\n    const format = 'jwk';\n    const wrappedPrivateKey = hexStringToUint8Array(privateKeyObject.privateKey);\n    const unwrapAlgorithm = {\n      name: 'AES-CBC',\n      iv: hexStringToUint8Array(privateKeyObject.iv),\n    };\n    const unwrappedKeyAlgorithm = {\n      name: 'RSA-PSS',\n      hash: { name: 'sha-256' },\n    };\n    const extractable = true;\n    const keyUsages = ['sign'];\n\n    return crypto.subtle.unwrapKey(\n      format,\n      wrappedPrivateKey,\n      key,\n      unwrapAlgorithm,\n      unwrappedKeyAlgorithm,\n      extractable,\n      keyUsages\n    );\n  }\n\n  function importKey(key, keyObject) {\n    const format = 'jwk';\n    const wrappedKey = hexStringToUint8Array(keyObject.key);\n    const unwrapAlgorithm = {\n      name: 'AES-CBC',\n      iv: hexStringToUint8Array(keyObject.iv),\n    };\n    const unwrappedKeyAlgorithm = unwrapAlgorithm;\n    const extractable = true;\n    const keyUsages = ['wrapKey', 'unwrapKey'];\n\n    return crypto.subtle.unwrapKey(\n      format,\n      wrappedKey,\n      key,\n      unwrapAlgorithm,\n      unwrappedKeyAlgorithm,\n      extractable,\n      keyUsages\n    );\n  }\n\n  function randomUUID() {\n    return crypto.randomUUID();\n  }\n\n  const SecretinBrowserAdapter = {\n    convertOAEPToPSS,\n    decryptAESGCM256,\n    decryptRSAOAEP,\n    derivePassword,\n    encryptAESGCM256,\n    encryptRSAOAEP,\n    exportClearKey,\n    exportKey,\n    generateWrappingKey,\n    genRSAOAEP,\n    genRSAPSS,\n    getSHA256,\n    importKey,\n    importPrivateKey,\n    importPrivateKeySign,\n    importPublicKey,\n    importPublicKeySign,\n    sign,\n    unwrapRSAOAEP,\n    verify,\n    wrapRSAOAEP,\n    randomUUID,\n  };\n\n  exports.convertOAEPToPSS = convertOAEPToPSS;\n  exports.decryptAESGCM256 = decryptAESGCM256;\n  exports.decryptRSAOAEP = decryptRSAOAEP;\n  exports[\"default\"] = SecretinBrowserAdapter;\n  exports.derivePassword = derivePassword;\n  exports.encryptAESGCM256 = encryptAESGCM256;\n  exports.encryptRSAOAEP = encryptRSAOAEP;\n  exports.exportClearKey = exportClearKey;\n  exports.exportKey = exportKey;\n  exports.genRSAOAEP = genRSAOAEP;\n  exports.genRSAPSS = genRSAPSS;\n  exports.generateWrappingKey = generateWrappingKey;\n  exports.getSHA256 = getSHA256;\n  exports.importKey = importKey;\n  exports.importPrivateKey = importPrivateKey;\n  exports.importPrivateKeySign = importPrivateKeySign;\n  exports.importPublicKey = importPublicKey;\n  exports.importPublicKeySign = importPublicKeySign;\n  exports.randomUUID = randomUUID;\n  exports.sign = sign;\n  exports.unwrapRSAOAEP = unwrapRSAOAEP;\n  exports.verify = verify;\n  exports.wrapRSAOAEP = wrapRSAOAEP;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Secretin = factory());\n})(this, (function () { 'use strict';\n\n  var version = \"2.5.1\";\n\n  const owaspConfigs = {\n    allowPassphrases: true,\n    maxLength: 128,\n    minLength: 10,\n    minPhraseLength: 20,\n    minOptionalTestsToPass: 4,\n  };\n  const tests = [\n    function enforceMinimumLength(password) {\n      if (password.length < owaspConfigs.minLength) {\n        throw new Error(\n          `The password must be at least ${owaspConfigs.minLength} characters long.`\n        );\n      }\n    },\n\n    function enforceMaximumLength(password) {\n      if (password.length > owaspConfigs.maxLength) {\n        throw new Error(\n          `The password must be fewer than ${owaspConfigs.maxLength} characters.`\n        );\n      }\n    },\n\n    function forbidRepeatingCharacters(password) {\n      if (/(.)\\1{2,}/.test(password)) {\n        throw new Error(\n          'The password may not contain sequences of three or more repeated characters.'\n        );\n      }\n    },\n\n    function requireAtLeastOneLowercaseLetter(password) {\n      if (!/[a-z]/.test(password)) {\n        throw new Error(\n          'The password must contain at least one lowercase letter.'\n        );\n      }\n    },\n\n    function requireAtLeastOneUppercaseLetter(password) {\n      if (!/[A-Z]/.test(password)) {\n        throw new Error(\n          'The password must contain at least one uppercase letter.'\n        );\n      }\n    },\n\n    function requireAtLeastOneNumber(password) {\n      if (!/[0-9]/.test(password)) {\n        throw new Error('The password must contain at least one number.');\n      }\n    },\n\n    function requireAtLeastOneSpecialCharacter(password) {\n      if (!/[^A-Za-z0-9]/.test(password)) {\n        throw new Error(\n          'The password must contain at least one special character.'\n        );\n      }\n    },\n  ];\n\n  function assertPasswordComplexity(password) {\n    tests.forEach((testStrength) => {\n      testStrength(password);\n    });\n  }\n\n  /* eslint-disable max-classes-per-file */\n  class Error$1 {\n    constructor(errorObject) {\n      this.message = 'Unknown error';\n      if (typeof errorObject !== 'undefined') {\n        this.errorObject = errorObject;\n      } else {\n        this.errorObject = null;\n      }\n    }\n  }\n\n  class XorSeedError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Utils.xorSeed expect 32 bytes Uint8Arrays';\n    }\n  }\n  class InvalidHexStringError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Invalid hexString';\n    }\n  }\n\n  class SomethingGoesWrong extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Something goes wrong.';\n    }\n  }\n\n  class ServerUnknownError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Server error';\n    }\n  }\n\n  class UserNotFoundError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'User not found';\n    }\n  }\n\n  class UsernameAlreadyExistsError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Username already exists';\n    }\n  }\n\n  class NeedTOTPTokenError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Need TOTP token';\n    }\n  }\n\n  class DisconnectedError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'You are disconnected';\n    }\n  }\n\n  class InvalidSignatureError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Invalid signature';\n    }\n  }\n\n  class DontHaveSecretError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You don't have this secret\";\n    }\n  }\n\n  class FolderNotFoundError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Folder not found';\n    }\n  }\n\n  class FolderInItselfError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't put this folder in itself.\";\n    }\n  }\n\n  class LocalStorageUnavailableError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'LocalStorage unavailable';\n    }\n  }\n\n  class InvalidPasswordError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Invalid password';\n    }\n  }\n\n  class CantEditSecretError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't edit this secret\";\n    }\n  }\n\n  class CantShareSecretError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't share this secret\";\n    }\n  }\n\n  class CantUnshareSecretError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't unshare this secret\";\n    }\n  }\n\n  class CantUnshareWithYourselfError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't unshare with yourself\";\n    }\n  }\n\n  class CantShareWithYourselfError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't share with yourself\";\n    }\n  }\n\n  class SecretAlreadyExistsError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Wow you are unlucky ! SecretID already exists';\n    }\n  }\n\n  class SecretNotFoundError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Secret not found';\n    }\n  }\n\n  class CantGenerateNewKeyError extends Error$1 {\n    constructor() {\n      super();\n      this.message = \"You can't generate new key for this secret\";\n    }\n  }\n\n  class NotSharedWithUserError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Secret not shared with this user';\n    }\n  }\n\n  class FriendNotFoundError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Friend not found';\n    }\n  }\n\n  class OfflineError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Offline';\n    }\n  }\n\n  class NotAvailableError extends Error$1 {\n    constructor() {\n      super();\n      this.message = 'Not available in standalone mode';\n    }\n  }\n\n  class WrappingError {\n    constructor(error) {\n      if (error.constructor !== String) {\n        this.error = error;\n      } else if (error === 'Unknown error') {\n        this.error = new ServerUnknownError();\n      } else if (error === 'User not found') {\n        this.error = new UserNotFoundError();\n      } else if (error === 'Username already exists') {\n        this.error = new UsernameAlreadyExistsError();\n      } else if (error === 'Need TOTP token') {\n        this.error = new NeedTOTPTokenError();\n      } else if (error === 'You are disconnected') {\n        this.error = new DisconnectedError();\n      } else if (error === 'Invalid signature') {\n        this.error = new InvalidSignatureError();\n      } else if (error === \"You don't have this secret\") {\n        this.error = new DontHaveSecretError();\n      } else if (error === 'Folder not found') {\n        this.error = new FolderNotFoundError();\n      } else if (error === \"You can't put this folder in itself.\") {\n        this.error = new FolderInItselfError();\n      } else if (error === 'LocalStorage unavailable') {\n        this.error = new LocalStorageUnavailableError();\n      } else if (error === 'Invalid Password') {\n        this.error = new InvalidPasswordError();\n      } else if (error === \"You can't edit this secret\") {\n        this.error = new CantEditSecretError();\n      } else if (error === \"You can't share this secret\") {\n        this.error = new CantShareSecretError();\n      } else if (error === \"You can't unshare this secret\") {\n        this.error = new CantUnshareSecretError();\n      } else if (error === \"You can't unshare with yourself\") {\n        this.error = new CantUnshareWithYourselfError();\n      } else if (error === \"You can't share with yourself\") {\n        this.error = new CantShareWithYourselfError();\n      } else if (error === 'Secret already exists') {\n        this.error = new SecretAlreadyExistsError();\n      } else if (error === 'Secret not found') {\n        this.error = new SecretNotFoundError();\n      } else if (error === \"You can't generate new key for this secret\") {\n        this.error = new CantGenerateNewKeyError();\n      } else if (error === 'Secret not shared with this user') {\n        this.error = new NotSharedWithUserError();\n      } else if (error === 'Friend not found') {\n        this.error = new FriendNotFoundError();\n      } else if (error === 'Offline') {\n        this.error = new OfflineError();\n      } else if (error === 'Not available in standalone mode') {\n        this.error = new NotAvailableError();\n      } else if (error === 'Something goes wrong.') {\n        this.error = new SomethingGoesWrong();\n      } else {\n        this.error = new Error$1(error);\n      }\n    }\n  }\n\n  const Errors = {\n    Error: Error$1,\n    ServerUnknownError,\n    UserNotFoundError,\n    UsernameAlreadyExistsError,\n    NeedTOTPTokenError,\n    DisconnectedError,\n    InvalidSignatureError,\n    DontHaveSecretError,\n    FolderNotFoundError,\n    FolderInItselfError,\n    LocalStorageUnavailableError,\n    WrappingError,\n    InvalidPasswordError,\n    CantEditSecretError,\n    CantShareSecretError,\n    CantUnshareSecretError,\n    CantUnshareWithYourselfError,\n    CantShareWithYourselfError,\n    SecretAlreadyExistsError,\n    SecretNotFoundError,\n    CantGenerateNewKeyError,\n    NotSharedWithUserError,\n    FriendNotFoundError,\n    OfflineError,\n    InvalidHexStringError,\n    XorSeedError,\n    NotAvailableError,\n    SomethingGoesWrong,\n  };\n\n  /* eslint-disable max-classes-per-file */\n  class Status {\n    constructor(state = 0, total = 1) {\n      this.message = 'Unknown status';\n      this.state = state;\n      this.total = total;\n    }\n  }\n\n  class PasswordDerivationStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Password derivation';\n    }\n  }\n\n  class GetDerivationStatus extends Status {\n    constructor() {\n      super();\n\n      this.message = 'Retrieve derivation parameters';\n    }\n  }\n\n  class GetUserStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Get user encrypted datas';\n    }\n  }\n\n  class GetProtectKeyStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Get encrypted protect key';\n    }\n  }\n\n  class ImportPublicKeyStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Import public key';\n    }\n  }\n\n  class DecryptPrivateKeyStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Decrypt private key';\n    }\n  }\n\n  class DecryptUserOptionsStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Decrypt user options';\n    }\n  }\n\n  class DecryptMetadataCacheStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'Decrypt metadata cache';\n    }\n  }\n\n  class EndDecryptMetadataStatus extends Status {\n    constructor() {\n      super();\n      this.message = 'End decrypt metadata';\n    }\n  }\n\n  class DecryptMetadataStatus extends Status {\n    constructor(state, total) {\n      super(state, total);\n      this.message = 'Decrypt metadata';\n    }\n\n    step() {\n      this.state += 1;\n    }\n  }\n\n  class ImportSecretStatus extends Status {\n    constructor(state, total) {\n      super(state, total);\n      this.message = 'Import secret';\n    }\n\n    step() {\n      this.state += 1;\n    }\n  }\n\n  const Statuses = {\n    Status,\n    GetDerivationStatus,\n    PasswordDerivationStatus,\n    GetUserStatus,\n    ImportPublicKeyStatus,\n    DecryptPrivateKeyStatus,\n    DecryptUserOptionsStatus,\n    DecryptMetadataCacheStatus,\n    DecryptMetadataStatus,\n    EndDecryptMetadataStatus,\n    GetProtectKeyStatus,\n    ImportSecretStatus,\n  };\n\n  const symbols = '!@#$%^&*()+_=}{[]|:;\"?.><,`~';\n  const vowels = 'aeiouy';\n  const consonants = 'bcdfghjklmnpqrstvwxz';\n  const numbers = '0123456789';\n\n  const similarChars = '[]i;lLI|`\\'\"oO09g8B';\n\n  function generateRandomNumber(max) {\n    const randomValues = new Uint8Array(1);\n    crypto.getRandomValues(randomValues);\n    return randomValues[0] % max;\n  }\n\n  function escapeRegExp(s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  const hasNumber = (str) => str.match(/\\d+/g) != null;\n  const hasMixedCase = (str) =>\n    str.toUpperCase() !== str && str.toLowerCase() !== str;\n  const hasSymbol = (str) => {\n    const regexString = `[${escapeRegExp(symbols)}]`;\n    // The regexp variable is not controllable from the outside\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    const symbolRegex = new RegExp(regexString);\n    return str.match(symbolRegex) != null;\n  };\n\n  const checkStrictRules = (str, rules) =>\n    rules.numbers === hasNumber(str) &&\n    rules.mixedCase === hasMixedCase(str) &&\n    rules.symbols === hasSymbol(str);\n\n  const buildCharset = (options) => {\n    const charset = [];\n\n    const letters = vowels + consonants;\n\n    charset.push(...letters);\n\n    if (options.contentRules.mixedCase) {\n      charset.push(...letters.toUpperCase());\n    }\n    if (options.contentRules.numbers) {\n      charset.push(...numbers);\n    }\n    if (options.contentRules.symbols) {\n      charset.push(...symbols);\n    }\n\n    if (options.allowSimilarChars === false) {\n      return charset.filter((char) => !similarChars.includes(char));\n    }\n\n    return charset;\n  };\n\n  const filterCharset = (charset, excludedChars) =>\n    [...charset].filter((char) => !excludedChars.includes(char)).join('');\n\n  const getRandomPassword = (options) => {\n    let password = '';\n\n    if (options.readable) {\n      const pronounceableConsonants = filterCharset(consonants, 'qhc');\n      const pronounceableVowels = filterCharset(vowels, 'y');\n\n      let lastCharWasVocal = Boolean(generateRandomNumber(1));\n      for (let i = 0; i < options.length; i += 1) {\n        const charset = lastCharWasVocal\n          ? pronounceableConsonants\n          : pronounceableVowels;\n        lastCharWasVocal = !lastCharWasVocal;\n        const randomIndex = generateRandomNumber(charset.length);\n        password += charset[randomIndex];\n      }\n      // Perform splitting\n      const passwordChars = [...password];\n      const step = 5;\n      for (let i = step; i < password.length; i += step + 1) {\n        passwordChars[i === password.length - 1 ? i - 1 : i] = '-';\n      }\n      password = passwordChars.join('');\n    } else {\n      const charset = buildCharset(options);\n\n      for (let i = 0; i < options.length; i += 1) {\n        const randomIndex = generateRandomNumber(charset.length);\n        password += charset[randomIndex];\n      }\n    }\n\n    return password;\n  };\n\n  const generatePassword = (customOptions) => {\n    const defaults = {\n      length: 20,\n      readable: false,\n      allowSimilarChars: false,\n      strictRules: true,\n      contentRules: {\n        numbers: true,\n        mixedCase: true,\n        symbols: true,\n      },\n    };\n\n    const options = { ...defaults, ...customOptions };\n    const { contentRules } = options;\n\n    const password = getRandomPassword(options);\n\n    if (options.strictRules && !options.readable) {\n      return checkStrictRules(password, contentRules)\n        ? password\n        : generatePassword(customOptions);\n    }\n\n    return password;\n  };\n\n  const PasswordGenerator = {\n    hasNumber,\n    hasMixedCase,\n    hasSymbol,\n    checkStrictRules,\n    buildCharset,\n    getRandomPassword,\n    generatePassword,\n    generateRandomNumber,\n    escapeRegExp,\n  };\n\n  /* eslint-disable no-bitwise */\n\n  function hexStringToUint8Array(hexString) {\n    if (hexString.length % 2 !== 0) {\n      throw new InvalidHexStringError();\n    }\n    const arrayBuffer = new Uint8Array(hexString.length / 2);\n\n    for (let i = 0; i < hexString.length; i += 2) {\n      const byteValue = parseInt(hexString.substr(i, 2), 16);\n      if (Number.isNaN(byteValue)) {\n        throw new InvalidHexStringError();\n      }\n      arrayBuffer[i / 2] = byteValue;\n    }\n\n    return arrayBuffer;\n  }\n\n  function bytesToHexString(givenBytes) {\n    if (!givenBytes) {\n      return null;\n    }\n\n    const bytes = new Uint8Array(givenBytes);\n    const hexBytes = [];\n\n    for (let i = 0; i < bytes.length; i += 1) {\n      let byteString = bytes[i].toString(16);\n      if (byteString.length < 2) {\n        byteString = `0${byteString}`;\n      }\n      hexBytes.push(byteString);\n    }\n    return hexBytes.join('');\n  }\n\n  function asciiToUint8Array(str) {\n    const chars = [];\n    for (let i = 0; i < str.length; i += 1) {\n      chars.push(str.charCodeAt(i));\n    }\n    return new Uint8Array(chars);\n  }\n\n  function asciiToHexString(str) {\n    return str\n      .split('')\n      .map((c) => `0${c.charCodeAt(0).toString(16)}`.slice(-2))\n      .join('');\n  }\n\n  function hexStringToAscii(hexx) {\n    const hex = hexx.toString();\n    let str = '';\n    for (let i = 0; i < hex.length; i += 2) {\n      str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }\n    return str;\n  }\n\n  function bytesToASCIIString(bytes) {\n    // String.fromCharCode.apply(null, new Uint8Array(bytes)) trigger Maximum call stack size exceeded\n    const array = new Uint8Array(bytes);\n    return array.reduce(\n      (str, charIndex) => str + String.fromCharCode(charIndex),\n      ''\n    );\n  }\n\n  function generateRescueCodes() {\n    const RESCUE_CODE_LENGTH = 8;\n    const RESCUE_CODE_COUNT = 5;\n    const rescueCodes = [];\n    const buf = new Uint8Array((RESCUE_CODE_LENGTH / 2) * RESCUE_CODE_COUNT);\n    crypto.getRandomValues(buf);\n    const rescueCodeSource = bytesToHexString(buf);\n    for (let i = 0; i < RESCUE_CODE_COUNT; i += 1) {\n      const rescueCode = rescueCodeSource.slice(\n        i * RESCUE_CODE_LENGTH,\n        (i + 1) * RESCUE_CODE_LENGTH\n      );\n      rescueCodes.push(rescueCode);\n    }\n    return rescueCodes;\n  }\n\n  function generateSeed() {\n    const buf = new Uint8Array(32);\n    crypto.getRandomValues(buf);\n\n    let shift = 3;\n    let carry = 0;\n    let symbol;\n    let byte;\n    let i;\n    let output = '';\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\n    for (i = 0; i < buf.length; i += 1) {\n      byte = buf[i];\n\n      symbol = carry | (byte >> shift);\n      output += alphabet[symbol & 0x1f];\n\n      if (shift > 5) {\n        shift -= 5;\n        symbol = byte >> shift;\n        output += alphabet[symbol & 0x1f];\n      }\n\n      shift = 5 - shift;\n      carry = byte << shift;\n      shift = 8 - shift;\n    }\n\n    if (shift !== 3) {\n      output += alphabet[carry & 0x1f];\n      shift = 3;\n      carry = 0;\n    }\n\n    return { b32: output, raw: buf };\n  }\n\n  function localStorageAvailable() {\n    try {\n      const storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function xorSeed(byteArray1, byteArray2) {\n    if (\n      byteArray1 instanceof Uint8Array &&\n      byteArray2 instanceof Uint8Array &&\n      byteArray1.length === 32 &&\n      byteArray2.length === 32\n    ) {\n      const buf = new Uint8Array(32);\n      let i;\n      for (i = 0; i < 32; i += 1) {\n        buf[i] = byteArray1[i] ^ byteArray2[i];\n      }\n      return bytesToHexString(buf);\n    }\n    throw new XorSeedError();\n  }\n\n  function xorRescueCode(rescueCode, hash) {\n    if (\n      rescueCode instanceof Uint8Array &&\n      hash instanceof Uint8Array &&\n      hash.length === 32 &&\n      rescueCode.length === 4\n    ) {\n      const buf = new Uint8Array(rescueCode.length);\n      let i;\n      for (i = 0; i < rescueCode.length; i += 1) {\n        buf[i] = rescueCode[i] ^ hash[i];\n      }\n      return bytesToHexString(buf);\n    }\n    throw new XorSeedError();\n  }\n\n  function defaultProgress(status) {\n    const seconds = Math.trunc(Date.now());\n    if (status.total < 2) {\n      // eslint-disable-next-line no-console\n      console.log(`${seconds} : ${status.message}`);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(\n        `${seconds} : ${status.message} (${status.state}/${status.total})`\n      );\n    }\n  }\n\n  const SecretinPrefix = 'Secret-in:';\n\n  const Utils = {\n    xorRescueCode,\n    generateRescueCodes,\n    generateSeed,\n    hexStringToUint8Array,\n    bytesToHexString,\n    asciiToUint8Array,\n    bytesToASCIIString,\n    xorSeed,\n    defaultProgress,\n    asciiToHexString,\n    hexStringToAscii,\n    PasswordGenerator,\n    SecretinPrefix,\n  };\n\n  class API$1 {\n    constructor(db, getSHA256) {\n      if (typeof db === 'object') {\n        this.db = db;\n      } else {\n        this.db = { users: {}, secrets: {} };\n      }\n      this.getSHA256 = getSHA256;\n    }\n\n    userExists(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then(\n        () => true,\n        () => false\n      );\n    }\n\n    addUser({\n      username,\n      privateKey,\n      publicKey,\n      privateKeySign,\n      publicKeySign,\n      pass,\n      options,\n    }) {\n      let hashedUsername;\n      return this.getSHA256(username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return new Promise((resolve, reject) => {\n            if (typeof this.db.users[hashedUsername] === 'undefined') {\n              resolve(this.getSHA256(pass.hash));\n            } else {\n              reject(new UsernameAlreadyExistsError());\n            }\n          });\n        })\n        .then((hashedHash) => {\n          this.db.users[hashedUsername] = {\n            pass: {\n              salt: pass.salt,\n              hash: hashedHash,\n              iterations: pass.iterations,\n            },\n            privateKeySign,\n            publicKeySign,\n            privateKey,\n            publicKey,\n            keys: {},\n            options,\n          };\n        });\n    }\n\n    addSecret(user, secretObject) {\n      return new Promise((resolve, reject) => {\n        if (typeof this.db.users[secretObject.hashedUsername] !== 'undefined') {\n          if (typeof this.db.secrets[secretObject.hashedTitle] === 'undefined') {\n            this.db.secrets[secretObject.hashedTitle] = {\n              secret: secretObject.secret,\n              metadatas: secretObject.metadatas,\n              history: secretObject.history,\n              iv: secretObject.iv,\n              iv_meta: secretObject.iv_meta,\n              iv_history: secretObject.iv_history,\n              users: [secretObject.hashedUsername],\n              rev: 'Standalone',\n            };\n            this.db.users[secretObject.hashedUsername].keys[\n              secretObject.hashedTitle\n            ] = {\n              key: secretObject.wrappedKey,\n              rights: 2,\n            };\n            resolve();\n          }\n          reject(new SecretAlreadyExistsError());\n        } else {\n          reject(new UserNotFoundError());\n        }\n      });\n    }\n\n    deleteSecret(user, hashedTitle) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        if (typeof this.db.users[hashedUsername] !== 'undefined') {\n          if (typeof this.db.secrets[hashedTitle] === 'undefined') {\n            return Promise.reject(new SecretNotFoundError());\n          }\n          delete this.db.users[hashedUsername].keys[hashedTitle];\n          const index =\n            this.db.secrets[hashedTitle].users.indexOf(hashedUsername);\n          if (index > -1) {\n            this.db.secrets[hashedTitle].users.splice(index, 1);\n          }\n          if (this.db.secrets[hashedTitle].users.length === 0) {\n            delete this.db.secrets[hashedTitle];\n          }\n          return Promise.resolve();\n        }\n        return Promise.reject(new UserNotFoundError());\n      });\n    }\n\n    editSecret(user, secretObject, hashedTitle) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        if (typeof this.db.users[hashedUsername] !== 'undefined') {\n          if (typeof this.db.secrets[hashedTitle] !== 'undefined') {\n            if (\n              typeof this.db.users[hashedUsername].keys[hashedTitle].rights ===\n                'undefined' ||\n              this.db.users[hashedUsername].keys[hashedTitle].rights <= 0\n            ) {\n              return Promise.reject(new CantEditSecretError());\n            }\n            this.db.secrets[hashedTitle].iv = secretObject.iv;\n            this.db.secrets[hashedTitle].secret = secretObject.secret;\n            this.db.secrets[hashedTitle].iv_meta = secretObject.iv_meta;\n            this.db.secrets[hashedTitle].metadatas = secretObject.metadatas;\n            this.db.secrets[hashedTitle].editOffline = true;\n            this.db.secrets[hashedTitle].iv_history = secretObject.iv_history;\n            this.db.secrets[hashedTitle].history = secretObject.history;\n            return Promise.resolve();\n          }\n          return Promise.reject(new SecretNotFoundError());\n        }\n        return Promise.reject(new UserNotFoundError());\n      });\n    }\n\n    newKey(user, hashedTitle, secret, wrappedKeys) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        if (typeof this.db.users[hashedUsername] !== 'undefined') {\n          if (typeof this.db.secrets[hashedTitle] !== 'undefined') {\n            if (\n              typeof this.db.users[hashedUsername].keys[hashedTitle].rights ===\n                'undefined' ||\n              this.db.users[hashedUsername].keys[hashedTitle].rights <= 1\n            ) {\n              return Promise.reject(new CantGenerateNewKeyError());\n            }\n            this.db.secrets[hashedTitle].iv = secret.iv;\n            this.db.secrets[hashedTitle].secret = secret.secret;\n            this.db.secrets[hashedTitle].iv_meta = secret.iv_meta;\n            this.db.secrets[hashedTitle].metadatas = secret.metadatas;\n            this.db.secrets[hashedTitle].iv_history = secret.iv_history;\n            this.db.secrets[hashedTitle].history = secret.history;\n            wrappedKeys.forEach((wrappedKey) => {\n              if (typeof this.db.users[wrappedKey.user] !== 'undefined') {\n                if (\n                  typeof this.db.users[wrappedKey.user].keys[hashedTitle] !==\n                  'undefined'\n                ) {\n                  this.db.users[wrappedKey.user].keys[hashedTitle].key =\n                    wrappedKey.key;\n                }\n              }\n            });\n            return Promise.resolve();\n          }\n          return Promise.reject(new SecretNotFoundError());\n        }\n        return Promise.reject(new UserNotFoundError());\n      });\n    }\n\n    unshareSecret(user, friendNames, hashedTitle) {\n      let hashedUsername;\n      const hashedFriendUsernames = [];\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          const hashedFriendUseramePromises = [];\n          friendNames.forEach((username) => {\n            hashedFriendUseramePromises.push(this.getSHA256(username));\n          });\n          return Promise.all(hashedFriendUseramePromises);\n        })\n        .then((rHashedFriendUserames) => {\n          rHashedFriendUserames.forEach((hashedFriendUserame) => {\n            hashedFriendUsernames.push(hashedFriendUserame);\n          });\n          if (typeof this.db.users[hashedUsername] !== 'undefined') {\n            if (typeof this.db.secrets[hashedTitle] !== 'undefined') {\n              if (\n                typeof this.db.users[hashedUsername].keys[hashedTitle].rights !==\n                  'undefined' &&\n                this.db.users[hashedUsername].keys[hashedTitle].rights > 1\n              ) {\n                let yourself = 0;\n                let nb = 0;\n                let response = 'Secret unshared';\n                hashedFriendUsernames.forEach((hashedFriendUsername) => {\n                  if (hashedUsername !== hashedFriendUsername) {\n                    const dbUser = this.db.users[hashedFriendUsername];\n                    if (typeof dbUser !== 'undefined') {\n                      if (typeof dbUser.keys[hashedTitle] !== 'undefined') {\n                        delete dbUser.keys[hashedTitle];\n                        const id =\n                          this.db.secrets[hashedTitle].users.indexOf(\n                            hashedFriendUsername\n                          );\n                        this.db.secrets[hashedTitle].users.splice(id, 1);\n                        nb += 1;\n                      } else {\n                        throw new NotSharedWithUserError();\n                      }\n                    } else {\n                      throw new NotSharedWithUserError();\n                    }\n                  } else {\n                    yourself = 1;\n                    if (hashedFriendUsernames.length === 1) {\n                      response = \"You can't unshare with yourself\";\n                    }\n                  }\n                });\n                if (nb === hashedFriendUsernames.length - yourself) {\n                  return response;\n                }\n                return Promise.reject(new SomethingGoesWrong());\n              }\n              return Promise.reject(new CantUnshareSecretError());\n            }\n            return Promise.reject(new SecretNotFoundError());\n          }\n          return Promise.reject(new UserNotFoundError());\n        });\n    }\n\n    shareSecret(user, sharedSecretObjects) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        const dbUser = this.db.users[hashedUsername];\n        if (typeof dbUser !== 'undefined') {\n          let nb = 0;\n          sharedSecretObjects.forEach((sharedSecretObject) => {\n            if (sharedSecretObject.friendName !== hashedUsername) {\n              if (\n                typeof this.db.secrets[sharedSecretObject.hashedTitle] !==\n                'undefined'\n              ) {\n                if (\n                  typeof dbUser.keys[sharedSecretObject.hashedTitle].rights !==\n                    'undefined' &&\n                  dbUser.keys[sharedSecretObject.hashedTitle].rights > 1\n                ) {\n                  const dbFriend = this.db.users[sharedSecretObject.friendName];\n                  if (typeof dbFriend !== 'undefined') {\n                    dbFriend.keys[sharedSecretObject.hashedTitle] = {\n                      key: sharedSecretObject.wrappedKey,\n                      rights: sharedSecretObject.rights,\n                    };\n                    const { users } =\n                      this.db.secrets[sharedSecretObject.hashedTitle];\n                    if (users.indexOf(sharedSecretObject.friendName) < 0) {\n                      users.push(sharedSecretObject.friendName);\n                    }\n                    nb += 1;\n                  } else {\n                    throw new FriendNotFoundError();\n                  }\n                } else {\n                  throw new CantShareSecretError();\n                }\n              } else {\n                throw new SecretNotFoundError();\n              }\n            } else {\n              throw new CantShareWithYourselfError();\n            }\n          });\n          if (nb !== sharedSecretObjects.length) {\n            return Promise.reject(new SomethingGoesWrong());\n          }\n          return Promise.resolve();\n        }\n        return Promise.reject(new UserNotFoundError());\n      });\n    }\n\n    retrieveUser(username, hash, hashed) {\n      let hashedUsername = username;\n      let user;\n      let isHashed = Promise.resolve();\n\n      if (!hashed) {\n        isHashed = isHashed\n          .then(() => this.getSHA256(username))\n          .then((rHashedUsername) => {\n            hashedUsername = rHashedUsername;\n          });\n      }\n\n      return isHashed\n        .then(() => {\n          if (typeof this.db.users[hashedUsername] === 'undefined') {\n            return Promise.reject(new UserNotFoundError());\n          }\n          user = JSON.parse(JSON.stringify(this.db.users[hashedUsername]));\n          return this.getSHA256(hash);\n        })\n        .then((hashedHash) => {\n          delete user.keys;\n          if (hashedHash === user.pass.hash) {\n            return user;\n          }\n          const fakePrivateKey = new Uint8Array(3232);\n          const fakeIV = new Uint8Array(16);\n          const fakeHash = new Uint8Array(32);\n          crypto.getRandomValues(fakePrivateKey);\n          crypto.getRandomValues(fakeIV);\n          crypto.getRandomValues(fakeHash);\n          user.privateKey = {\n            privateKey: bytesToHexString(fakePrivateKey),\n            iv: bytesToHexString(fakeIV),\n          };\n          user.pass.hash = fakeHash;\n          return user;\n        });\n    }\n\n    getDerivationParameters(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then((user) => ({\n        totp: user.pass.totp,\n        salt: user.pass.salt,\n        iterations: user.pass.iterations,\n      }));\n    }\n\n    getPublicKey(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then(\n        (user) => user.publicKey\n      );\n    }\n\n    getUser(username, hash) {\n      return this.retrieveUser(username, hash, false);\n    }\n\n    getUserWithSignature(user) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        return new Promise((resolve, reject) => {\n          if (typeof this.db.users[hashedUsername] === 'undefined') {\n            reject(new UserNotFoundError());\n          } else {\n            const userObject = JSON.parse(\n              JSON.stringify(this.db.users[hashedUsername])\n            );\n            const metadatas = {};\n            const hashedTitles = Object.keys(userObject.keys);\n            hashedTitles.forEach((hashedTitle) => {\n              const secret = this.db.secrets[hashedTitle];\n              metadatas[hashedTitle] = {\n                iv: secret.iv_meta,\n                secret: secret.metadatas,\n              };\n            });\n            userObject.metadatas = metadatas;\n            resolve(userObject);\n          }\n        });\n      });\n    }\n\n    getSecret(hash) {\n      return new Promise((resolve, reject) => {\n        if (typeof this.db.secrets[hash] === 'undefined') {\n          reject(new DontHaveSecretError());\n        } else {\n          resolve(this.db.secrets[hash]);\n        }\n      });\n    }\n\n    getAllMetadatas(user) {\n      const result = {};\n      return new Promise((resolve) => {\n        const hashedTitles = Object.keys(user.keys);\n        hashedTitles.forEach((hashedTitle) => {\n          const secret = this.db.secrets[hashedTitle];\n          result[hashedTitle] = {\n            iv: secret.iv_meta,\n            secret: secret.metadatas,\n          };\n        });\n        resolve(result);\n      });\n    }\n\n    getHistory(user, hash) {\n      return new Promise((resolve, reject) => {\n        if (typeof this.db.secrets[hash] === 'undefined') {\n          reject(new DontHaveSecretError());\n        } else {\n          const secret = this.db.secrets[hash];\n          const history = {\n            iv: secret.iv_history,\n            secret: secret.history,\n          };\n          resolve(history);\n        }\n      });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getProtectKeyParameters() {\n      return Promise.reject(new NotAvailableError());\n    }\n\n    getDb() {\n      return new Promise((resolve) => {\n        resolve(this.db);\n      });\n    }\n\n    editUser(user, datas) {\n      let hashedUsername;\n      return this.getSHA256(user.username).then((rHashedUsername) => {\n        hashedUsername = rHashedUsername;\n        return new Promise((resolve, reject) => {\n          if (typeof this.db.users[hashedUsername] !== 'undefined') {\n            if (\n              typeof datas.privateKey !== 'undefined' &&\n              typeof datas.pass !== 'undefined'\n            ) {\n              resolve(\n                this.changePassword(hashedUsername, datas.privateKey, datas.pass)\n              );\n            } else {\n              if (typeof datas.options === 'undefined') {\n                this.db.users[hashedUsername].metadataCache = datas;\n              } else {\n                this.db.users[hashedUsername].options = datas;\n              }\n              resolve();\n            }\n          } else {\n            reject(new UserNotFoundError());\n          }\n        });\n      });\n    }\n\n    changePassword(hashedUsername, privateKey, pass) {\n      return this.getSHA256(pass.hash).then((hashedHash) => {\n        const newPass = pass;\n        newPass.hash = hashedHash;\n        this.db.users[hashedUsername].privateKey = privateKey;\n        this.db.users[hashedUsername].pass = newPass;\n      });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    isOnline() {\n      return new Promise((resolve) => {\n        resolve(false);\n      });\n    }\n  }\n\n  class User {\n    constructor(username, cryptoAdapter) {\n      this.cryptoAdapter = cryptoAdapter;\n      this.username = username;\n      this.publicKey = null;\n      this.publicKeySign = null;\n      this.privateKey = null;\n      this.privateKeySign = null;\n      this.keys = {};\n      this.hash = '';\n      this.totp = false;\n      this.metadatas = {};\n      this.options = User.defaultOptions;\n    }\n\n    disconnect() {\n      delete this.username;\n      delete this.publicKey;\n      delete this.publicKeySign;\n      delete this.privateKey;\n      delete this.privateKeySign;\n      delete this.metadatas;\n      delete this.keys;\n      delete this.hash;\n      delete this.totp;\n      delete this.options;\n    }\n\n    sign(datas) {\n      return this.cryptoAdapter.sign(datas, this.privateKeySign);\n    }\n\n    verify(datas, signature) {\n      return this.cryptoAdapter.verify(datas, signature, this.publicKeySign);\n    }\n\n    generateMasterKey() {\n      return this.cryptoAdapter\n        .genRSAOAEP()\n        .then((keyPair) => {\n          this.publicKey = keyPair.publicKey;\n          this.privateKey = keyPair.privateKey;\n          return this.cryptoAdapter.genRSAPSS();\n        })\n        .then((keyPairSign) => {\n          this.publicKeySign = keyPairSign.publicKey;\n          this.privateKeySign = keyPairSign.privateKey;\n        });\n    }\n\n    async deprecatedConvertOAEPToPSS() {\n      this.isUsingLegacyKey = true;\n\n      this.publicKeySign = await this.cryptoAdapter.convertOAEPToPSS(\n        this.publicKey,\n        'verify'\n      );\n\n      this.privateKeySign = await this.cryptoAdapter.convertOAEPToPSS(\n        this.privateKey,\n        'sign'\n      );\n    }\n\n    exportPublicKey() {\n      return this.cryptoAdapter.exportClearKey(this.publicKey);\n    }\n\n    async importPublicKey(jwkPublicKey) {\n      this.publicKey = await this.cryptoAdapter.importPublicKey(jwkPublicKey);\n    }\n\n    exportPrivateKey(password) {\n      const pass = {};\n      return this.cryptoAdapter\n        .derivePassword(password)\n        .then((dKey) => {\n          pass.salt = dKey.salt;\n          this.hash = dKey.hash;\n          pass.hash = this.hash;\n          pass.iterations = dKey.iterations;\n          return this.cryptoAdapter.exportKey(dKey.key, this.privateKey);\n        })\n        .then((keyObject) => ({\n          privateKey: {\n            privateKey: keyObject.key,\n            iv: keyObject.iv,\n          },\n          pass,\n        }));\n    }\n\n    importPrivateKey(dKey, privateKeyObject) {\n      return this.cryptoAdapter\n        .importPrivateKey(dKey, privateKeyObject)\n        .then((privateKey) => {\n          this.privateKey = privateKey;\n        })\n        .catch(() => Promise.reject(new InvalidPasswordError()));\n    }\n\n    async exportKeyPairSign() {\n      // Legacy retro compatibility\n      if (this.isUsingLegacyKey) {\n        return { publicKeySign: null, privateKeySign: null };\n      }\n      const publicKeySign = await this.cryptoAdapter.exportClearKey(\n        this.publicKeySign\n      );\n      const protectKey = await this.cryptoAdapter.generateWrappingKey();\n      const { iv, key: wrapped } = await this.cryptoAdapter.exportKey(\n        protectKey,\n        this.privateKeySign\n      );\n\n      const key = await this.wrapKey(protectKey, this.publicKey);\n      return { publicKeySign, privateKeySign: { iv, wrapped, key } };\n    }\n\n    async importKeyPairSign({ publicKeySign, privateKeySign }) {\n      this.publicKeySign = await this.cryptoAdapter.importPublicKeySign(\n        publicKeySign\n      );\n\n      const { iv, wrapped, key } = privateKeySign;\n      const protectKey = await this.unwrapKey(key, {\n        name: 'AES-CBC',\n        length: 256,\n      });\n\n      this.privateKeySign = await this.cryptoAdapter.importPrivateKeySign(\n        protectKey,\n        {\n          privateKey: wrapped,\n          iv,\n        }\n      );\n    }\n\n    exportBigPrivateData(data) {\n      const result = {};\n      return this.cryptoAdapter\n        .encryptAESGCM256(data)\n        .then((secretObject) => {\n          result.secret = secretObject.secret;\n          result.iv = secretObject.iv;\n          return this.wrapKey(secretObject.key, this.publicKey);\n        })\n        .then((wrappedKey) => {\n          result.wrappedKey = wrappedKey;\n          return result;\n        });\n    }\n\n    importBigPrivateData(data) {\n      return this.unwrapKey(data.wrappedKey).then((key) =>\n        this.cryptoAdapter.decryptAESGCM256(data, key)\n      );\n    }\n\n    exportPrivateData(data) {\n      const result = {};\n      return this.cryptoAdapter\n        .encryptRSAOAEP(data, this.publicKey)\n        .then((encryptedOptions) => {\n          result.data = encryptedOptions;\n          return this.sign(result.data);\n        })\n        .then((signature) => {\n          result.signature = signature;\n          return result;\n        });\n    }\n\n    importPrivateData(data, signature) {\n      return this.verify(data, signature).then((verified) => {\n        if (verified) {\n          return this.cryptoAdapter.decryptRSAOAEP(data, this.privateKey);\n        }\n        return null;\n      });\n    }\n\n    exportOptions() {\n      return this.exportPrivateData(this.options).then((result) => ({\n        options: result.data,\n        signature: result.signature,\n      }));\n    }\n\n    importOptions(optionsObject) {\n      // Retro compatibility\n      if (typeof optionsObject === 'undefined') {\n        this.options = User.defaultOptions;\n        return Promise.resolve(null);\n      }\n      return this.importPrivateData(\n        optionsObject.options,\n        optionsObject.signature\n      ).then((options) => {\n        if (options) {\n          this.options = options;\n        } else {\n          this.options = User.defaultOptions;\n        }\n      });\n    }\n\n    shareSecret(friend, wrappedKey, hashedTitle) {\n      const result = { hashedTitle };\n      return this.unwrapKey(wrappedKey)\n        .then((key) => this.wrapKey(key, friend.publicKey))\n        .then((friendWrappedKey) => {\n          result.wrappedKey = friendWrappedKey;\n          return this.cryptoAdapter.getSHA256(friend.username);\n        })\n        .then((hashedUsername) => {\n          result.friendName = hashedUsername;\n          return result;\n        });\n    }\n\n    editSecret(hashedTitle, secret, history) {\n      const metadatas = this.metadatas[hashedTitle];\n      if (typeof metadatas === 'undefined') {\n        return Promise.reject(new DontHaveSecretError());\n      }\n      const now = new Date();\n      metadatas.lastModifiedAt = now.toISOString();\n      metadatas.lastModifiedBy = this.username;\n      const wrappedKey = this.keys[hashedTitle].key;\n      const result = {};\n      return this.unwrapKey(wrappedKey)\n        .then((key) => this.encryptSecret(metadatas, secret, history, key))\n        .then((secretObject) => {\n          result.secret = secretObject.secret;\n          result.iv = secretObject.iv;\n          result.metadatas = secretObject.metadatas;\n          result.iv_meta = secretObject.iv_meta;\n          result.history = secretObject.history;\n          result.iv_history = secretObject.iv_history;\n          return result;\n        });\n    }\n\n    createSecret(metadatas, secret) {\n      const now = this.cryptoAdapter.randomUUID();\n      const saltedTitle = `${now}|${metadatas.title}`;\n      const result = {};\n      const newMetadas = metadatas;\n      return this.cryptoAdapter\n        .getSHA256(saltedTitle)\n        .then((hashedTitle) => {\n          result.hashedTitle = hashedTitle;\n          newMetadas.id = result.hashedTitle;\n          return this.encryptSecret(newMetadas, secret);\n        })\n        .then((secretObject) => {\n          result.secret = secretObject.secret;\n          result.iv = secretObject.iv;\n          result.metadatas = secretObject.metadatas;\n          result.iv_meta = secretObject.iv_meta;\n          result.history = secretObject.history;\n          result.iv_history = secretObject.iv_history;\n          result.hashedUsername = secretObject.hashedUsername;\n          return this.wrapKey(secretObject.key, this.publicKey);\n        })\n        .then((wrappedKey) => {\n          result.wrappedKey = wrappedKey;\n          return result;\n        });\n    }\n\n    exportSecret(\n      hashedTitle,\n      encryptedSecret,\n      encryptedMetadata,\n      encryptedHistory\n    ) {\n      let secret;\n      let metadata;\n      return this.decryptSecret(hashedTitle, encryptedSecret)\n        .then((rSecret) => {\n          secret = rSecret;\n          return this.decryptSecret(hashedTitle, encryptedMetadata);\n        })\n        .then((rMetadata) => {\n          metadata = { ...rMetadata, title: decodeURIComponent(rMetadata.title) };\n          if (typeof encryptedHistory.iv === 'undefined') {\n            return Promise.resolve({});\n          }\n          return this.decryptSecret(hashedTitle, encryptedHistory);\n        })\n        .then((history) => ({\n          secret,\n          metadata,\n          history,\n        }));\n    }\n\n    importSecret(hashedTitle, secret, metadata, history) {\n      const result = {};\n      return this.encryptSecret(metadata, secret, history)\n        .then((secretObject) => {\n          result.secret = secretObject.secret;\n          result.iv = secretObject.iv;\n          result.metadatas = secretObject.metadatas;\n          result.iv_meta = secretObject.iv_meta;\n          result.history = secretObject.history;\n          result.iv_history = secretObject.iv_history;\n          result.hashedUsername = secretObject.hashedUsername;\n          result.hashedTitle = hashedTitle;\n          return this.wrapKey(secretObject.key, this.publicKey);\n        })\n        .then((wrappedKey) => {\n          result.wrappedKey = wrappedKey;\n          return result;\n        });\n    }\n\n    encryptSecret(metadatas, secret, history, key) {\n      const result = {};\n      let newHistory;\n      return Promise.resolve()\n        .then(() => {\n          if (Array.isArray(history)) {\n            // history already decrypted\n            return Promise.resolve(history);\n          }\n          if (\n            typeof history !== 'undefined' &&\n            typeof history.iv !== 'undefined' &&\n            typeof history.secret !== 'undefined'\n          ) {\n            // history must be decrypted\n            return this.decryptSecret(metadatas.id, history);\n          }\n          // no history yet\n          return Promise.resolve([]);\n        })\n        .then((rHistory) => {\n          newHistory = rHistory;\n          if (\n            newHistory.length === 0 ||\n            JSON.stringify(newHistory[0].secret) !== JSON.stringify(secret)\n          ) {\n            newHistory.unshift({\n              secret,\n              lastModifiedAt: metadatas.lastModifiedAt,\n              lastModifiedBy: metadatas.lastModifiedBy,\n            });\n          }\n          return this.cryptoAdapter.encryptAESGCM256(secret, key);\n        })\n        .then((secretObject) => {\n          result.secret = secretObject.secret;\n          result.iv = secretObject.iv;\n          result.key = secretObject.key;\n          return this.cryptoAdapter.encryptAESGCM256(\n            { ...metadatas, title: encodeURIComponent(metadatas.title) },\n            secretObject.key\n          );\n        })\n        .then((secretObject) => {\n          result.metadatas = secretObject.secret;\n          result.iv_meta = secretObject.iv;\n          return this.cryptoAdapter.encryptAESGCM256(\n            newHistory,\n            secretObject.key\n          );\n        })\n        .then((secretObject) => {\n          result.history = secretObject.secret;\n          result.iv_history = secretObject.iv;\n          return this.cryptoAdapter.getSHA256(this.username);\n        })\n        .then((hashedUsername) => {\n          result.hashedUsername = hashedUsername;\n          return result;\n        });\n    }\n\n    decryptSecret(hashedTitle, secret) {\n      if (typeof this.keys[hashedTitle] === 'undefined') {\n        return Promise.reject(new DontHaveSecretError());\n      }\n      const wrappedKey = this.keys[hashedTitle].key;\n      return this.unwrapKey(wrappedKey).then((key) =>\n        this.cryptoAdapter.decryptAESGCM256(secret, key)\n      );\n    }\n\n    unwrapKey(wrappedKey, unwrappedKeyAlgorithm) {\n      return this.cryptoAdapter.unwrapRSAOAEP(\n        wrappedKey,\n        this.privateKey,\n        unwrappedKeyAlgorithm\n      );\n    }\n\n    wrapKey(key, publicKey) {\n      return this.cryptoAdapter.wrapRSAOAEP(key, publicKey);\n    }\n\n    decryptAllMetadatas(allMetadatas, progress = defaultProgress) {\n      const hashedTitles = Object.keys(this.keys);\n\n      const progressStatus = new DecryptMetadataStatus(0, hashedTitles.length);\n      progress(progressStatus);\n      const metadatas = {};\n      return hashedTitles\n        .reduce(\n          (promise, hashedTitle) =>\n            promise.then(() =>\n              this.decryptSecret(hashedTitle, allMetadatas[hashedTitle]).then(\n                (metadata) => {\n                  progressStatus.step();\n                  progress(progressStatus);\n                  metadatas[hashedTitle] = {\n                    ...metadata,\n                    title: decodeURIComponent(metadata.title),\n                  };\n                }\n              )\n            ),\n          Promise.resolve()\n        )\n        .then(() => metadatas);\n    }\n\n    activateShortLogin(shortpass, deviceName) {\n      let protectKey;\n      const toSend = {};\n      return this.cryptoAdapter\n        .generateWrappingKey()\n        .then((key) => {\n          protectKey = key;\n          return this.cryptoAdapter.exportKey(protectKey, this.privateKey);\n        })\n        .then((object) => {\n          localStorage.setItem(`${SecretinPrefix}privateKey`, object.key);\n          localStorage.setItem(`${SecretinPrefix}privateKeyIv`, object.iv);\n          return this.exportKeyPairSign();\n        })\n        .then(({ privateKeySign, publicKeySign }) => {\n          if (privateKeySign && publicKeySign) {\n            localStorage.setItem(\n              `${SecretinPrefix}privateKeySign`,\n              JSON.stringify(privateKeySign)\n            );\n            localStorage.setItem(\n              `${SecretinPrefix}publicKeySign`,\n              JSON.stringify(publicKeySign)\n            );\n          }\n          return this.cryptoAdapter.derivePassword(shortpass);\n        })\n        .then((derived) => {\n          toSend.salt = derived.salt;\n          toSend.iterations = derived.iterations;\n          toSend.hash = derived.hash;\n          return this.cryptoAdapter.exportKey(derived.key, protectKey);\n        })\n        .then((keyObject) => {\n          toSend.protectKey = keyObject.key;\n          localStorage.setItem(`${SecretinPrefix}iv`, keyObject.iv);\n          localStorage.setItem(`${SecretinPrefix}username`, this.username);\n          return this.cryptoAdapter.getSHA256(deviceName);\n        })\n        .then((deviceId) => {\n          toSend.deviceId = deviceId;\n          localStorage.setItem(`${SecretinPrefix}deviceName`, deviceName);\n          localStorage.setItem(\n            `${SecretinPrefix}activatedAt`,\n            new Date().toISOString()\n          );\n          return toSend;\n        });\n    }\n\n    shortLogin(shortpass, wrappedProtectKey) {\n      const keyObject = {\n        key: wrappedProtectKey,\n        iv: localStorage.getItem(`${SecretinPrefix}iv`),\n      };\n      return this.cryptoAdapter\n        .importKey(shortpass, keyObject)\n        .then((protectKey) => {\n          const privateKeyObject = {\n            privateKey: localStorage.getItem(`${SecretinPrefix}privateKey`),\n            iv: localStorage.getItem(`${SecretinPrefix}privateKeyIv`),\n          };\n          return this.importPrivateKey(protectKey, privateKeyObject);\n        })\n        .then(() => {\n          const publicKeySignRaw = localStorage.getItem(\n            `${SecretinPrefix}publicKeySign`\n          );\n          const privateKeySignRaw = localStorage.getItem(\n            `${SecretinPrefix}privateKeySign`\n          );\n          if (publicKeySignRaw && privateKeySignRaw) {\n            const privateKeySign = JSON.parse(privateKeySignRaw);\n            const publicKeySign = JSON.parse(publicKeySignRaw);\n            this.importKeyPairSign({\n              privateKeySign,\n              publicKeySign,\n            });\n          }\n        })\n        .catch(() => Promise.reject(new InvalidPasswordError()));\n    }\n  }\n\n  Object.defineProperty(User, 'defaultOptions', {\n    value: {\n      timeToClose: 30,\n    },\n    writable: false,\n    enumerable: true,\n    configurable: false,\n  });\n\n  class Secretin {\n    constructor(cryptoAdapter, API = API$1, db = undefined) {\n      this.cryptoAdapter = cryptoAdapter;\n      this.api = new API(db, this.cryptoAdapter.getSHA256);\n      this.editableDB = true;\n      this.currentUser = {};\n      this.listeners = {\n        connectionChange: [],\n      };\n    }\n\n    addEventListener(event, callback) {\n      this.listeners[event].push(callback);\n    }\n\n    removeEventListener(event, callback) {\n      const callbackIndex = this.listeners[event].indexOf(callback);\n      this.listeners[event].splice(callbackIndex, 1);\n    }\n\n    dispatchEvent(event, eventArgs) {\n      this.listeners[event].map((callback) => callback(eventArgs));\n    }\n\n    offlineDB(username) {\n      if (this.editableDB) {\n        const cacheKey = `${SecretinPrefix}cache_${\n        username || this.currentUser.username\n      }`;\n        const DbCacheStr = localStorage.getItem(cacheKey);\n        const DbCache = DbCacheStr\n          ? JSON.parse(DbCacheStr)\n          : { users: {}, secrets: {} };\n        this.oldApi = this.api;\n        this.api = new API$1(DbCache, this.cryptoAdapter.getSHA256);\n        this.editableDB = false;\n        this.dispatchEvent('connectionChange', { connection: 'offline' });\n        this.testOnline();\n      }\n    }\n\n    testOnline() {\n      setTimeout(async () => {\n        try {\n          await this.oldApi.isOnline();\n          this.api = this.oldApi;\n          this.editableDB = true;\n          this.dispatchEvent('connectionChange', { connection: 'online' });\n          if (\n            typeof this.currentUser.username !== 'undefined' &&\n            typeof window.process !== 'undefined'\n          ) {\n            this.getDb().then(() => this.doCacheActions());\n          }\n        } catch (err) {\n          if (err instanceof OfflineError) {\n            this.testOnline();\n          } else {\n            throw err;\n          }\n        }\n      }, 10000);\n    }\n\n    setConflict(remote, local) {\n      const conflictSecretsKey = `${SecretinPrefix}conflictSecrets${this.currentUser.username}`;\n      const conflictSecretsStr = localStorage.getItem(conflictSecretsKey);\n      const conflictSecrets = conflictSecretsStr\n        ? JSON.parse(conflictSecretsStr)\n        : {};\n      conflictSecrets[remote] = local;\n      return localStorage.setItem(\n        conflictSecretsKey,\n        JSON.stringify(conflictSecrets)\n      );\n    }\n\n    getConflict(remote) {\n      const conflictSecretsKey = `${SecretinPrefix}conflictSecrets${this.currentUser.username}`;\n      const conflictSecretsStr = localStorage.getItem(conflictSecretsKey);\n      const conflictSecrets = conflictSecretsStr\n        ? JSON.parse(conflictSecretsStr)\n        : {};\n      if (typeof conflictSecrets[remote] !== 'undefined') {\n        return conflictSecrets[remote];\n      }\n      return remote;\n    }\n\n    popCacheAction() {\n      const cacheActionsKey = `${SecretinPrefix}cacheActions_${this.currentUser.username}`;\n      const cacheActionsStr = localStorage.getItem(cacheActionsKey);\n      const updatedCacheActions = JSON.parse(cacheActionsStr);\n      updatedCacheActions.shift();\n      return localStorage.setItem(\n        cacheActionsKey,\n        JSON.stringify(updatedCacheActions)\n      );\n    }\n\n    pushCacheAction(action, args) {\n      const cacheActionsKey = `${SecretinPrefix}cacheActions_${this.currentUser.username}`;\n      const cacheActionsStr = localStorage.getItem(cacheActionsKey);\n      const cacheActions = cacheActionsStr ? JSON.parse(cacheActionsStr) : [];\n      cacheActions.push({\n        action,\n        args,\n      });\n\n      localStorage.setItem(cacheActionsKey, JSON.stringify(cacheActions));\n    }\n\n    async doCacheActions() {\n      const cacheActionsKey = `${SecretinPrefix}cacheActions_${this.currentUser.username}`;\n      const cacheActionsStr = localStorage.getItem(cacheActionsKey);\n      const cacheActions = cacheActionsStr ? JSON.parse(cacheActionsStr) : [];\n      for (const cacheAction of cacheActions) {\n        switch (cacheAction.action) {\n          case 'addSecret': {\n            await this.api.addSecret(this.currentUser, cacheAction.args[0]);\n            this.currentUser.keys[cacheAction.args[0].hashedTitle] = {\n              key: cacheAction.args[0].wrappedKey,\n              rights: 2,\n            };\n            const metadatas = await this.cryptoAdapter.decryptRSAOAEP(\n              cacheAction.args[1],\n              this.currentUser.privateKey\n            );\n            this.currentUser.metadatas[cacheAction.args[0].hashedTitle] =\n              metadatas;\n            this.popCacheAction();\n            break;\n          }\n          case 'editSecret': {\n            const secretId = this.getConflict(cacheAction.args[0]);\n            const encryptedContent = cacheAction.args[1];\n            const content = await this.cryptoAdapter.decryptRSAOAEP(\n              encryptedContent,\n              this.currentUser.privateKey\n            );\n\n            if (typeof this.currentUser.keys[secretId] === 'undefined') {\n              const conflictSecretId = await this.addSecret(\n                `${content.title} (Conflict)`,\n                content.secret\n              );\n              this.setConflict(cacheAction.args[0], conflictSecretId);\n            } else {\n              await this.editSecret(secretId, content.secret);\n            }\n\n            this.popCacheAction();\n            break;\n          }\n          case 'renameSecret': {\n            const secretId = this.getConflict(cacheAction.args[0]);\n            const encryptedContent = cacheAction.args[1];\n            const content = await this.cryptoAdapter.decryptRSAOAEP(\n              encryptedContent,\n              this.currentUser.privateKey\n            );\n\n            if (typeof this.currentUser.keys[secretId] === 'undefined') {\n              const conflictSecretId = await this.addSecret(\n                `${content.title} (Conflict)`,\n                content.secret\n              );\n              this.setConflict(cacheAction.args[0], conflictSecretId);\n            } else {\n              await this.renameSecret(secretId, content.title);\n            }\n            this.popCacheAction();\n            break;\n          }\n        }\n      }\n    }\n\n    async newUser(username, password) {\n      assertPasswordComplexity(password);\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      try {\n        this.currentUser = new User(username, this.cryptoAdapter);\n        const exists = await this.api.userExists(username);\n        if (exists) {\n          throw new UsernameAlreadyExistsError();\n        }\n        await this.currentUser.generateMasterKey();\n        const objectPrivateKey = await this.currentUser.exportPrivateKey(\n          password\n        );\n\n        const privateKey = objectPrivateKey.privateKey;\n        const pass = objectPrivateKey.pass;\n        pass.totp = false;\n        pass.shortpass = false;\n\n        const options = await this.currentUser.exportOptions();\n\n        const publicKey = await this.currentUser.exportPublicKey();\n\n        const { privateKeySign, publicKeySign } =\n          await this.currentUser.exportKeyPairSign();\n\n        await this.api.addUser({\n          username: this.currentUser.username,\n          privateKey,\n          publicKey,\n          privateKeySign,\n          publicKeySign,\n          pass,\n          options,\n        });\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n        return this.currentUser;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async loginUser(\n      username,\n      password,\n      otp,\n      progress = defaultProgress,\n      forceSync = true\n    ) {\n      try {\n        progress(new GetDerivationStatus());\n        const parameters = await this.api.getDerivationParameters(username);\n        if (parameters.totp && (typeof otp === 'undefined' || otp === '')) {\n          throw new NeedTOTPTokenError();\n        }\n        progress(new PasswordDerivationStatus());\n        const { hash, key } = await this.cryptoAdapter.derivePassword(\n          password,\n          parameters\n        );\n        progress(new GetUserStatus());\n        const remoteUser = await this.api.getUser(username, hash, otp);\n\n        this.currentUser = new User(username, this.cryptoAdapter);\n        this.currentUser.totp = parameters.totp;\n        this.currentUser.hash = hash;\n        progress(new DecryptPrivateKeyStatus());\n        await this.currentUser.importPrivateKey(key, remoteUser.privateKey);\n\n        progress(new ImportPublicKeyStatus());\n        await this.currentUser.importPublicKey(remoteUser.publicKey);\n        if (!remoteUser.publicKeySign || !remoteUser.privateKeySign) {\n          // Legacy bad practice\n          await this.currentUser.deprecatedConvertOAEPToPSS();\n        } else {\n          await this.currentUser.importKeyPairSign({\n            privateKeySign: remoteUser.privateKeySign,\n            publicKeySign: remoteUser.publicKeySign,\n          });\n        }\n\n        const shortpass = localStorage.getItem(`${SecretinPrefix}shortpass`);\n        const signature = localStorage.getItem(\n          `${SecretinPrefix}shortpassSignature`\n        );\n        if (shortpass && signature) {\n          await this.currentUser.importPrivateData(shortpass, signature);\n        }\n\n        if (shortpass && this.editableDB) {\n          const deviceName = localStorage.getItem(`${SecretinPrefix}deviceName`);\n          await this.activateShortLogin(shortpass, deviceName);\n        }\n        await this.refreshUser(forceSync, progress);\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n          if (this.editableDB) {\n            await this.doCacheActions();\n          }\n        }\n        return this.currentUser;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB(username);\n          return await this.loginUser(username, password, otp, progress);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async updateMetadataCache(newMetadata, progress = defaultProgress) {\n      const metadata = await this.currentUser.decryptAllMetadatas(\n        newMetadata,\n        progress\n      );\n\n      this.currentUser.metadatas = metadata;\n      progress(new EndDecryptMetadataStatus());\n      const objectMetadataCache = await this.currentUser.exportBigPrivateData(\n        metadata\n      );\n\n      return await this.api.editUser(this.currentUser, objectMetadataCache);\n    }\n\n    async refreshUser(rForceUpdate = false, progress = defaultProgress) {\n      let forceUpdate = rForceUpdate;\n      try {\n        const remoteUser = await this.api.getUserWithSignature(this.currentUser);\n\n        this.currentUser.keys = remoteUser.keys;\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n\n        progress(new DecryptUserOptionsStatus());\n        await this.currentUser.importOptions(remoteUser.options);\n        if (typeof remoteUser.metadataCache !== 'undefined') {\n          progress(new DecryptMetadataCacheStatus());\n          this.currentUser.metadatas =\n            await this.currentUser.importBigPrivateData(remoteUser.metadataCache);\n        } else {\n          forceUpdate = true;\n        }\n\n        if (forceUpdate) {\n          await this.updateMetadataCache(remoteUser.metadatas, progress);\n        } else {\n          this.updateMetadataCache(remoteUser.metadatas, progress);\n        }\n        return true;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.refreshUser(rForceUpdate, progress);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async addFolder(title, inFolderId) {\n      return await this.addSecret(title, {}, inFolderId, 'folder');\n    }\n\n    async addSecret(clearTitle, content, inFolderId, type = 'secret') {\n      try {\n        const now = new Date();\n        const metadatas = {\n          lastModifiedAt: now.toISOString(),\n          lastModifiedBy: this.currentUser.username,\n          users: {},\n          title: clearTitle,\n          type,\n        };\n\n        metadatas.users[this.currentUser.username] = {\n          username: this.currentUser.username,\n          rights: 2,\n          folders: {},\n        };\n        if (typeof inFolderId === 'undefined') {\n          metadatas.users[this.currentUser.username].folders.ROOT = true;\n        }\n\n        const secretObject = await this.currentUser.createSecret(\n          metadatas,\n          content\n        );\n\n        const hashedTitle = secretObject.hashedTitle;\n        this.currentUser.keys[secretObject.hashedTitle] = {\n          key: secretObject.wrappedKey,\n          rights: metadatas.users[this.currentUser.username].rights,\n        };\n        if (!this.editableDB) {\n          const encryptedMetadatas = await this.cryptoAdapter.encryptRSAOAEP(\n            metadatas,\n            this.currentUser.publicKey\n          );\n\n          this.pushCacheAction('addSecret', [secretObject, encryptedMetadatas]);\n        }\n\n        await this.api.addSecret(this.currentUser, secretObject);\n\n        this.currentUser.metadatas[hashedTitle] = metadatas;\n        if (typeof inFolderId !== 'undefined') {\n          await this.addSecretToFolder(hashedTitle, inFolderId);\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n\n        return hashedTitle;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.addSecret(clearTitle, content, inFolderId, type);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async changePassword(password, oldPassword) {\n      assertPasswordComplexity(password);\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      try {\n        const parameters = await this.api.getDerivationParameters(\n          this.currentUser.username\n        );\n        const { hash } = await this.cryptoAdapter.derivePassword(\n          oldPassword,\n          parameters\n        );\n\n        // eslint-disable-next-line security/detect-possible-timing-attacks\n        if (hash !== this.currentUser.hash) {\n          throw new InvalidPasswordError();\n        }\n\n        const objectPrivateKey = await this.currentUser.exportPrivateKey(\n          password\n        );\n\n        await this.api.editUser(this.currentUser, {\n          ...objectPrivateKey,\n          oldHash: hash,\n        });\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async editSecret(hashedTitle, content) {\n      try {\n        const history = await this.api.getHistory(this.currentUser, hashedTitle);\n\n        const secretObject = await this.currentUser.editSecret(\n          hashedTitle,\n          content,\n          history\n        );\n\n        if (!this.editableDB) {\n          if (\n            Object.keys(this.currentUser.metadatas[hashedTitle].users).length > 1\n          ) {\n            throw new OfflineError();\n          }\n          const args = [hashedTitle];\n          const toEncrypt = {\n            secret: content,\n            title: this.currentUser.metadatas[hashedTitle].title,\n          };\n          const encryptedContent = await this.cryptoAdapter.encryptRSAOAEP(\n            toEncrypt,\n            this.currentUser.publicKey\n          );\n\n          args.push(encryptedContent);\n          this.pushCacheAction('editSecret', args);\n        }\n\n        await this.api.editSecret(this.currentUser, secretObject, hashedTitle);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n        return true;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.editSecret(hashedTitle, content);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async editOption(name, value) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      this.currentUser.options[name] = value;\n      return await this.resetOptions();\n    }\n\n    async editOptions(options) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      this.currentUser.options = options;\n      return await this.resetOptions();\n    }\n\n    async resetOptions() {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      try {\n        const encryptedOptions = await this.currentUser.exportOptions();\n\n        await this.api.editUser(this.currentUser, encryptedOptions);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async addSecretToFolder(hashedSecretTitle, hashedFolder) {\n      try {\n        const folderMetadatas = this.currentUser.metadatas[hashedFolder];\n        const secretMetadatas = this.currentUser.metadatas[hashedSecretTitle];\n        const sharedSecretObjectsArray = [];\n        for (const friendName of Object.keys(folderMetadatas.users)) {\n          const friend = new User(friendName, this.cryptoAdapter);\n          const publicKey = await this.api.getPublicKey(friend.username);\n          await friend.importPublicKey(publicKey);\n          const sharedSecretObjects = await this.getSharedSecretObjects(\n            hashedSecretTitle,\n            friend,\n            folderMetadatas.users[friend.username].rights,\n            [],\n            true\n          );\n          sharedSecretObjectsArray.push(sharedSecretObjects);\n        }\n\n        const metadatasUsers = {};\n        const commonParentToClean = [];\n        const encryptedFolder = await this.api.getSecret(\n          hashedFolder,\n          this.currentUser\n        );\n\n        const folders = await this.currentUser.decryptSecret(\n          hashedFolder,\n          encryptedFolder\n        );\n\n        folders[hashedSecretTitle] = 1;\n        await this.editSecret(hashedFolder, folders);\n\n        const fullSharedSecretObjects = [];\n        sharedSecretObjectsArray.forEach((sharedSecretObjects) => {\n          sharedSecretObjects.forEach((sharedSecretObject) => {\n            const newSharedSecretObject = sharedSecretObject;\n            if (\n              typeof metadatasUsers[newSharedSecretObject.hashedTitle] ===\n              'undefined'\n            ) {\n              metadatasUsers[newSharedSecretObject.hashedTitle] = [];\n            }\n            metadatasUsers[newSharedSecretObject.hashedTitle].push({\n              friendName: newSharedSecretObject.username,\n              folder: newSharedSecretObject.inFolder,\n            });\n            delete newSharedSecretObject.inFolder;\n            if (this.currentUser.username !== newSharedSecretObject.username) {\n              delete newSharedSecretObject.username;\n              fullSharedSecretObjects.push(newSharedSecretObject);\n            }\n          });\n        });\n        if (fullSharedSecretObjects.length > 0) {\n          if (!this.editableDB) {\n            throw new OfflineError();\n          }\n          await this.api.shareSecret(this.currentUser, fullSharedSecretObjects);\n        }\n\n        Object.keys(folderMetadatas.users).forEach((username) => {\n          Object.keys(folderMetadatas.users[username].folders).forEach(\n            (parentFolder) => {\n              if (\n                typeof secretMetadatas.users[username] !== 'undefined' &&\n                typeof secretMetadatas.users[username].folders[parentFolder] !==\n                  'undefined'\n              ) {\n                commonParentToClean.push(parentFolder);\n              }\n            }\n          );\n        });\n\n        for (const hashedTitle of Object.keys(metadatasUsers)) {\n          metadatasUsers[hashedTitle].forEach((infos) => {\n            const currentSecret = this.currentUser.metadatas[hashedTitle];\n            const metaUser = {\n              username: infos.friendName,\n              rights: folderMetadatas.users[infos.friendName].rights,\n            };\n\n            if (typeof currentSecret.users[infos.friendName] !== 'undefined') {\n              metaUser.folders = currentSecret.users[infos.friendName].folders;\n            } else {\n              metaUser.folders = {};\n            }\n\n            if (typeof infos.folder !== 'undefined') {\n              metaUser.folders[infos.folder] = true;\n            } else {\n              metaUser.folders[hashedFolder] = true;\n            }\n\n            commonParentToClean.forEach((parentFolder) => {\n              delete metaUser.folders[parentFolder];\n            });\n\n            if (infos.friendName === this.currentUser.username) {\n              metaUser.rights = 2;\n            }\n            this.currentUser.metadatas[hashedTitle].users[infos.friendName] =\n              metaUser;\n          });\n\n          await this.resetMetadatas(hashedTitle);\n        }\n\n        for (const parentFolder of commonParentToClean) {\n          if (parentFolder !== 'ROOT') {\n            const encryptedParentFolder = await this.api.getSecret(\n              parentFolder,\n              this.currentUser\n            );\n            const parentFolders = await this.currentUser.decryptSecret(\n              parentFolder,\n              encryptedParentFolder\n            );\n\n            delete parentFolders[hashedSecretTitle];\n            await this.editSecret(parentFolder, parentFolders);\n          }\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n        return hashedSecretTitle;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.addSecretToFolder(hashedSecretTitle, hashedFolder);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async getSharedSecretObjects(\n      hashedTitle,\n      friend,\n      rights,\n      fullSharedSecretObjects,\n      addUsername = false,\n      hashedFolder = undefined\n    ) {\n      try {\n        const secretMetadatas = this.currentUser.metadatas[hashedTitle];\n        if (typeof secretMetadatas === 'undefined') {\n          throw new DontHaveSecretError();\n        }\n\n        if (secretMetadatas.type === 'folder') {\n          const encryptedSecret = await this.api.getSecret(\n            hashedTitle,\n            this.currentUser\n          );\n\n          const secrets = await this.currentUser.decryptSecret(\n            hashedTitle,\n            encryptedSecret\n          );\n\n          for (const hash of Object.keys(secrets)) {\n            await this.getSharedSecretObjects(\n              hash,\n              friend,\n              rights,\n              fullSharedSecretObjects,\n              addUsername,\n              hashedTitle\n            );\n          }\n        }\n\n        const secretObject = await this.currentUser.shareSecret(\n          friend,\n          this.currentUser.keys[hashedTitle].key,\n          hashedTitle\n        );\n\n        const newSecretObject = secretObject;\n        newSecretObject.rights = rights;\n        newSecretObject.inFolder = hashedFolder;\n        if (addUsername) {\n          newSecretObject.username = friend.username;\n        }\n        fullSharedSecretObjects.push(newSecretObject);\n        return fullSharedSecretObjects;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async renameSecret(hashedTitle, newTitle) {\n      try {\n        this.currentUser.metadatas[hashedTitle].title = newTitle;\n        if (!this.editableDB) {\n          if (\n            Object.keys(this.currentUser.metadatas[hashedTitle].users).length > 1\n          ) {\n            throw new OfflineError();\n          }\n          const args = [hashedTitle];\n\n          const secret = await this.getSecret(hashedTitle);\n\n          const toEncrypt = {\n            secret,\n            title: newTitle,\n          };\n          const encryptedContent = await this.cryptoAdapter.encryptRSAOAEP(\n            toEncrypt,\n            this.currentUser.publicKey\n          );\n\n          args.push(encryptedContent);\n          return this.pushCacheAction('renameSecret', args);\n        }\n        await this.resetMetadatas(hashedTitle);\n        return true;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.renameSecret(hashedTitle, newTitle);\n        }\n        throw err;\n      }\n    }\n\n    async resetMetadatas(hashedTitle) {\n      try {\n        const secret = await this.getSecret(hashedTitle);\n        await this.editSecret(hashedTitle, secret);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async shareSecret(hashedTitle, friendName, sRights) {\n      try {\n        if (!this.editableDB) {\n          throw new OfflineError();\n        }\n        const rights = parseInt(sRights, 10);\n        const friend = new User(friendName, this.cryptoAdapter);\n        const publicKey = await this.api.getPublicKey(friend.username);\n        await friend.importPublicKey(publicKey);\n        const sharedSecretObjects = await this.getSharedSecretObjects(\n          hashedTitle,\n          friend,\n          rights,\n          []\n        );\n        await this.api.shareSecret(this.currentUser, sharedSecretObjects);\n\n        for (const sharedSecretObject of sharedSecretObjects) {\n          const secretMetadatas =\n            this.currentUser.metadatas[sharedSecretObject.hashedTitle];\n          secretMetadatas.users[friend.username] = {\n            username: friend.username,\n            rights,\n            folders: {},\n          };\n          if (typeof sharedSecretObject.inFolder !== 'undefined') {\n            secretMetadatas.users[friend.username].folders[\n              sharedSecretObject.inFolder\n            ] = true;\n          } else {\n            secretMetadatas.users[friend.username].folders.ROOT = true;\n          }\n\n          await this.resetMetadatas(sharedSecretObject.hashedTitle);\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n        return this.currentUser.metadatas[hashedTitle];\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        if (wrapper.error instanceof UserNotFoundError) {\n          throw new FriendNotFoundError();\n        }\n        throw wrapper.error;\n      }\n    }\n\n    async unshareSecret(hashedTitle, friendName) {\n      try {\n        if (!this.editableDB) {\n          throw new OfflineError();\n        }\n\n        const secretMetadatas = this.currentUser.metadatas[hashedTitle];\n        if (typeof secretMetadatas === 'undefined') {\n          throw new DontHaveSecretError();\n        }\n        if (secretMetadatas.type === 'folder') {\n          await this.unshareFolderSecrets(hashedTitle, friendName);\n        }\n\n        const result = await this.api.unshareSecret(\n          this.currentUser,\n          [friendName],\n          hashedTitle\n        );\n        if (result !== 'Secret unshared') {\n          const wrapper = new WrappingError(result);\n          throw wrapper.error;\n        }\n        delete secretMetadatas.users[friendName];\n        await this.resetMetadatas(hashedTitle);\n        await this.renewKey(hashedTitle);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n\n        return this.currentUser.metadatas[hashedTitle];\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async unshareFolderSecrets(hashedFolder, friendName) {\n      try {\n        if (!this.editableDB) {\n          throw new OfflineError();\n        }\n        const encryptedSecret = await this.api.getSecret(\n          hashedFolder,\n          this.currentUser\n        );\n\n        const secrets = await this.currentUser.decryptSecret(\n          hashedFolder,\n          encryptedSecret\n        );\n\n        for (const hashedTitle of Object.keys(secrets)) {\n          await this.unshareSecret(hashedTitle, friendName);\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async wrapKeyForFriend(hashedUsername, key) {\n      try {\n        if (!this.editableDB) {\n          throw new OfflineError();\n        }\n\n        const publicKey = await this.api.getPublicKey(hashedUsername, true);\n\n        const friend = new User(hashedUsername, this.cryptoAdapter);\n        await friend.importPublicKey(publicKey);\n        const friendWrappedKey = await this.currentUser.wrapKey(\n          key,\n          friend.publicKey\n        );\n        return {\n          user: hashedUsername,\n          key: friendWrappedKey,\n        };\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async renewKey(hashedTitle) {\n      try {\n        if (!this.editableDB) {\n          throw new OfflineError();\n        }\n        const encryptedSecret = await this.api.getSecret(\n          hashedTitle,\n          this.currentUser\n        );\n        const history = await this.api.getHistory(this.currentUser, hashedTitle);\n        const rawSecret = await this.currentUser.decryptSecret(\n          hashedTitle,\n          encryptedSecret\n        );\n        const secretObject = await this.currentUser.encryptSecret(\n          this.currentUser.metadatas[hashedTitle],\n          rawSecret,\n          history\n        );\n\n        const secret = {\n          secret: secretObject.secret,\n          iv: secretObject.iv,\n          metadatas: secretObject.metadatas,\n          iv_meta: secretObject.iv_meta,\n          history: secretObject.history,\n          iv_history: secretObject.iv_history,\n        };\n\n        const hashedCurrentUsername = secretObject.hashedUsername;\n\n        const wrappedKeys = [];\n        for (const hashedUsername of encryptedSecret.users) {\n          if (hashedCurrentUsername === hashedUsername) {\n            const wrappedKey = await this.currentUser.wrapKey(\n              secretObject.key,\n              this.currentUser.publicKey\n            );\n            wrappedKeys.push({\n              user: hashedCurrentUsername,\n              key: wrappedKey,\n            });\n          } else {\n            wrappedKeys.push(\n              await this.wrapKeyForFriend(hashedUsername, secretObject.key)\n            );\n          }\n        }\n\n        await this.api.newKey(this.currentUser, hashedTitle, secret, wrappedKeys);\n\n        wrappedKeys.forEach((wrappedKey) => {\n          if (wrappedKey.user === hashedCurrentUsername) {\n            this.currentUser.keys[hashedTitle].key = wrappedKey.key;\n          }\n        });\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async removeSecretFromFolder(hashedTitle, hashedFolder) {\n      try {\n        const secretMetadatas = this.currentUser.metadatas[hashedTitle];\n        const usersToDelete = [];\n        Object.keys(secretMetadatas.users).forEach((username) => {\n          if (\n            typeof secretMetadatas.users[username].folders[hashedFolder] !==\n            'undefined'\n          ) {\n            usersToDelete.push(username);\n          }\n        });\n\n        if (usersToDelete.length > 1) {\n          if (!this.editableDB) {\n            throw new OfflineError();\n          }\n          await this.api.unshareSecret(\n            this.currentUser,\n            usersToDelete,\n            hashedTitle\n          );\n        }\n\n        usersToDelete.forEach((username) => {\n          delete secretMetadatas.users[username].folders[hashedFolder];\n          if (Object.keys(secretMetadatas.users[username].folders).length === 0) {\n            if (this.currentUser.username === username) {\n              secretMetadatas.users[username].folders.ROOT = true;\n            } else {\n              delete secretMetadatas.users[username];\n            }\n          }\n        });\n        if (usersToDelete.length > 1) {\n          await this.renewKey(hashedTitle);\n        }\n\n        await this.resetMetadatas(hashedTitle);\n        const encryptedSecret = await this.api.getSecret(\n          hashedFolder,\n          this.currentUser\n        );\n        const folder = await this.currentUser.decryptSecret(\n          hashedFolder,\n          encryptedSecret\n        );\n\n        delete folder[hashedTitle];\n        await this.editSecret(hashedFolder, folder);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n        return true;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.removeSecretFromFolder(hashedTitle, hashedFolder);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async getSecret(hashedTitle) {\n      try {\n        const encryptedSecret = await this.api.getSecret(\n          hashedTitle,\n          this.currentUser\n        );\n\n        const secret = await this.currentUser.decryptSecret(\n          hashedTitle,\n          encryptedSecret\n        );\n        return secret;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.getSecret(hashedTitle);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async getHistory(hashedTitle, index) {\n      try {\n        const encryptedHistory = await this.api.getHistory(\n          this.currentUser,\n          hashedTitle\n        );\n        const history = await this.currentUser.decryptSecret(\n          hashedTitle,\n          encryptedHistory\n        );\n\n        if (typeof index === 'undefined') {\n          return history;\n        }\n        if (index < 0) {\n          const diff = -index % history.length;\n          return history[-diff];\n        }\n        return history[index % history.length];\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.getHistory(hashedTitle, index);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async deleteSecret(hashedTitle, list = []) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      try {\n        const secretMetadatas = this.currentUser.metadatas[hashedTitle];\n        if (typeof secretMetadatas === 'undefined') {\n          throw new DontHaveSecretError();\n        }\n        if (\n          secretMetadatas.type === 'folder' &&\n          list.indexOf(hashedTitle) === -1\n        ) {\n          await this.deleteFolderSecrets(hashedTitle, list);\n        }\n\n        await this.api.deleteSecret(this.currentUser, hashedTitle);\n        delete this.currentUser.metadatas[hashedTitle];\n        delete this.currentUser.keys[hashedTitle];\n\n        const currentUsername = this.currentUser.username;\n        for (const hashedFolder of Object.keys(\n          secretMetadatas.users[currentUsername].folders\n        )) {\n          if (hashedFolder !== 'ROOT') {\n            const encryptedSecret = await this.api.getSecret(\n              hashedFolder,\n              this.currentUser\n            );\n            const folder = await this.currentUser.decryptSecret(\n              hashedFolder,\n              encryptedSecret\n            );\n\n            delete folder[hashedTitle];\n            await this.editSecret(hashedFolder, folder);\n          }\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async deleteFolderSecrets(hashedFolder, list) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n\n      try {\n        list.push(hashedFolder);\n        const encryptedSecret = await this.api.getSecret(\n          hashedFolder,\n          this.currentUser\n        );\n        const secrets = await this.currentUser.decryptSecret(\n          hashedFolder,\n          encryptedSecret\n        );\n\n        for (const hashedTitle of Object.keys(secrets)) {\n          await this.deleteSecret(hashedTitle, list);\n        }\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async deactivateTotp() {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n\n      try {\n        await this.api.deactivateTotp(this.currentUser);\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async activateTotp(seed) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      try {\n        const protectedSeed = xorSeed(\n          hexStringToUint8Array(this.currentUser.hash),\n          seed.raw\n        );\n        await this.api.activateTotp(protectedSeed, this.currentUser);\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async activateShortLogin(shortpass, deviceName) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n      if (!localStorageAvailable()) {\n        throw new LocalStorageUnavailableError();\n      }\n      try {\n        const toSend = await this.currentUser.activateShortLogin(\n          shortpass,\n          deviceName\n        );\n\n        await this.api.activateShortLogin(toSend, this.currentUser);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n        }\n\n        const result = await this.currentUser.exportPrivateData(shortpass);\n        localStorage.setItem(`${SecretinPrefix}shortpass`, result.data);\n        localStorage.setItem(\n          `${SecretinPrefix}shortpassSignature`,\n          result.signature\n        );\n      } catch (err) {\n        if (err.name === 'OperationError') {\n          this.deactivateShortLogin();\n          return;\n        }\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          throw err;\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getShortLoginActivationDate() {\n      if (!localStorageAvailable()) {\n        throw new LocalStorageUnavailableError();\n      }\n      const dateStr = localStorage.getItem(`${SecretinPrefix}activatedAt`);\n      return dateStr ? new Date(dateStr) : null;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    deactivateShortLogin() {\n      if (!localStorageAvailable()) {\n        throw new LocalStorageUnavailableError();\n      }\n      localStorage.removeItem(`${SecretinPrefix}username`);\n      localStorage.removeItem(`${SecretinPrefix}deviceName`);\n      localStorage.removeItem(`${SecretinPrefix}privateKey`);\n      localStorage.removeItem(`${SecretinPrefix}privateKeyIv`);\n      localStorage.removeItem(`${SecretinPrefix}privateKeyIv`);\n      localStorage.removeItem(`${SecretinPrefix}iv`);\n      localStorage.removeItem(`${SecretinPrefix}shortpass`);\n      localStorage.removeItem(`${SecretinPrefix}shortpassSignature`);\n      localStorage.removeItem(`${SecretinPrefix}activatedAt`);\n      localStorage.removeItem(`${SecretinPrefix}privateKeySign`);\n      localStorage.removeItem(`${SecretinPrefix}publicKeySign`);\n    }\n\n    async shortLogin(shortpass, progress = defaultProgress, forceSync = true) {\n      if (!localStorageAvailable()) {\n        throw new LocalStorageUnavailableError();\n      }\n      try {\n        const username = localStorage.getItem(`${SecretinPrefix}username`);\n        const deviceName = localStorage.getItem(`${SecretinPrefix}deviceName`);\n        this.currentUser = new User(username, this.cryptoAdapter);\n        progress(new GetDerivationStatus());\n        const parameters = await this.api.getProtectKeyParameters(\n          username,\n          deviceName\n        );\n\n        this.currentUser.totp = parameters.totp;\n        progress(new PasswordDerivationStatus());\n        const { hash, key: shortpassKey } =\n          await this.cryptoAdapter.derivePassword(shortpass, parameters);\n\n        progress(new GetProtectKeyStatus());\n        const protectKey = await this.api.getProtectKey(\n          username,\n          deviceName,\n          hash\n        );\n\n        progress(new DecryptPrivateKeyStatus());\n        await this.currentUser.shortLogin(shortpassKey, protectKey);\n\n        progress(new ImportPublicKeyStatus());\n        await this.currentUser.importPublicKey(parameters.publicKey);\n\n        if (!this.currentUser.publicKeySign || !this.currentUser.privateKeySign) {\n          // Legacy bad practice\n          await this.currentUser.deprecatedConvertOAEPToPSS();\n        }\n\n        await this.refreshUser(forceSync, progress);\n\n        if (typeof window.process !== 'undefined') {\n          // Electron\n          await this.getDb();\n          if (this.editableDB) {\n            await this.doCacheActions();\n          }\n        }\n        return this.currentUser;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.shortLogin(shortpass);\n        }\n        if (\n          err !== 'Not available in standalone mode' &&\n          !(err instanceof NotAvailableError)\n        ) {\n          localStorage.removeItem(`${SecretinPrefix}username`);\n          localStorage.removeItem(`${SecretinPrefix}privateKey`);\n          localStorage.removeItem(`${SecretinPrefix}privateKeyIv`);\n          localStorage.removeItem(`${SecretinPrefix}publicKeySign`);\n          localStorage.removeItem(`${SecretinPrefix}privateKeySign`);\n          localStorage.removeItem(`${SecretinPrefix}iv`);\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    canITryShortLogin() {\n      return (\n        this.editableDB &&\n        localStorageAvailable() &&\n        localStorage.getItem(`${SecretinPrefix}username`) !== null\n      );\n    }\n\n    getSavedUsername() {\n      if (this.canITryShortLogin()) {\n        return localStorage.getItem(`${SecretinPrefix}username`);\n      }\n      return null;\n    }\n\n    async getRescueCodes() {\n      try {\n        const rescueCodes = generateRescueCodes();\n        const protectedRescueCodes = rescueCodes.map((rescueCode) =>\n          xorRescueCode(\n            hexStringToUint8Array(rescueCode),\n            hexStringToUint8Array(this.currentUser.hash)\n          )\n        );\n        await this.api.postRescueCodes(this.currentUser, protectedRescueCodes);\n        return rescueCodes;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.getRescueCodes();\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async getDb() {\n      if (!localStorageAvailable()) {\n        throw new LocalStorageUnavailableError();\n      }\n      try {\n        const cacheKey = `${SecretinPrefix}cache_${this.currentUser.username}`;\n        const DbCacheStr = localStorage.getItem(cacheKey);\n        const DbCache = DbCacheStr\n          ? JSON.parse(DbCacheStr)\n          : { users: {}, secrets: {} };\n        const revs = {};\n        Object.keys(DbCache.secrets).forEach((key) => {\n          revs[key] = DbCache.secrets[key].rev;\n        });\n        const newDb = await this.api.getDb(this.currentUser, revs);\n\n        Object.keys(newDb.secrets).forEach((key) => {\n          if (\n            typeof DbCache.secrets[key] !== 'undefined' &&\n            DbCache.secrets[key].editOffline\n          ) {\n            this.setConflict(key, 'conflict');\n          }\n        });\n        Object.assign(DbCache.users, newDb.users);\n        Object.assign(DbCache.secrets, newDb.secrets);\n        Object.keys(DbCache.secrets).forEach((key) => {\n          if (!DbCache.secrets[key]) {\n            delete DbCache.secrets[key];\n          }\n        });\n        const newDbCacheStr = JSON.stringify(DbCache);\n        localStorage.setItem(cacheKey, JSON.stringify(DbCache));\n        return newDbCacheStr;\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.getDb();\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async exportDb(password, oldPassword) {\n      try {\n        const db = await this.api.getDb(this.currentUser, {});\n        const oldSecretin = new Secretin(\n          this.cryptoAdapter,\n          API$1,\n          JSON.parse(JSON.stringify(db))\n        );\n\n        if (typeof password === 'undefined') {\n          db.username = this.currentUser.username;\n          return JSON.stringify(db);\n        }\n\n        oldSecretin.currentUser = this.currentUser;\n        await oldSecretin.changePassword(password, oldPassword);\n        const newDb = await oldSecretin.api.getDb(oldSecretin.currentUser, {});\n        newDb.username = this.currentUser.username;\n        return JSON.stringify(newDb);\n      } catch (err) {\n        if (err instanceof OfflineError) {\n          this.offlineDB();\n          return await this.getDb();\n        }\n        const wrapper = new WrappingError(err);\n        throw wrapper.error;\n      }\n    }\n\n    async importDb(password, jsonDB, progress = defaultProgress) {\n      if (!this.editableDB) {\n        throw new OfflineError();\n      }\n\n      const oldDB = JSON.parse(jsonDB);\n      const { username } = oldDB;\n      const oldSecretin = new Secretin(this.cryptoAdapter, API$1, oldDB);\n      const newHashedTitles = {};\n      const parameters = await oldSecretin.api.getDerivationParameters(username);\n      const { hash, key } = await this.cryptoAdapter.derivePassword(\n        password,\n        parameters\n      );\n\n      const remoteUser = await oldSecretin.api.getUser(username, hash);\n\n      oldSecretin.currentUser = new User(username, this.cryptoAdapter);\n      oldSecretin.currentUser.totp = parameters.totp;\n      oldSecretin.currentUser.hash = hash;\n      await oldSecretin.currentUser.importPrivateKey(key, remoteUser.privateKey);\n      await oldSecretin.currentUser.importPublicKey(remoteUser.publicKey);\n      const user = await oldSecretin.api.getUserWithSignature(\n        oldSecretin.currentUser\n      );\n      const encryptedMetadata = user.metadatas;\n      oldSecretin.currentUser.keys = user.keys;\n      for (const hashedTitle of Object.keys(oldSecretin.currentUser.keys)) {\n        const now = this.cryptoAdapter.randomUUID();\n        const saltedTitle = `${now}|${hashedTitle}`;\n        const newHashedTitle = await this.cryptoAdapter.getSHA256(saltedTitle);\n        newHashedTitles[hashedTitle] = newHashedTitle;\n      }\n\n      const hashedTitles = Object.keys(oldSecretin.currentUser.keys);\n      const progressStatus = new ImportSecretStatus(0, hashedTitles.length);\n      progress(progressStatus);\n\n      for (const hashedTitle of hashedTitles) {\n        const encryptedSecret = await oldSecretin.api.getSecret(\n          hashedTitle,\n          oldSecretin.currentUser\n        );\n\n        const encryptedHistory = await oldSecretin.api.getHistory(\n          oldSecretin.currentUser,\n          hashedTitle\n        );\n\n        const { secret, metadata, history } =\n          await oldSecretin.currentUser.exportSecret(\n            hashedTitle,\n            encryptedSecret,\n            encryptedMetadata[hashedTitle],\n            encryptedHistory\n          );\n\n        const newMetadata = metadata;\n        const newSecret = secret;\n        const oldFolders = Object.keys(\n          newMetadata.users[oldSecretin.currentUser.username].folders\n        );\n        const newFolders = {};\n        oldFolders.forEach((oldFolder) => {\n          if (oldFolder !== 'ROOT') {\n            newFolders[newHashedTitles[oldFolder]] = true;\n          } else {\n            newFolders.ROOT = true;\n          }\n        });\n\n        newMetadata.id = newHashedTitles[metadata.id];\n        newMetadata.users = {\n          [this.currentUser.username]: {\n            username: this.currentUser.username,\n            rights: 2,\n            folders: newFolders,\n          },\n        };\n\n        const now = new Date();\n        newMetadata.lastModifiedAt = now.toISOString();\n        newMetadata.lastModifiedBy = this.currentUser.username;\n\n        if (metadata.type === 'folder') {\n          const oldSecrets = Object.keys(secret);\n          oldSecrets.forEach((oldSecret) => {\n            const newSecretTitle = newHashedTitles[oldSecret];\n            newSecret[newSecretTitle] = 1;\n            delete newSecret[oldSecret];\n          });\n        }\n\n        const secretObject = await this.currentUser.importSecret(\n          newHashedTitles[hashedTitle],\n          newSecret,\n          newMetadata,\n          history\n        );\n\n        this.currentUser.keys[secretObject.hashedTitle] = {\n          key: secretObject.wrappedKey,\n          rights: newMetadata.users[this.currentUser.username].rights,\n        };\n        this.currentUser.metadatas[secretObject.hashedTitle] = newMetadata;\n        await this.api.addSecret(this.currentUser, secretObject);\n\n        progressStatus.step();\n        progress(progressStatus);\n      }\n    }\n  }\n\n  function reqData(path, datas, type, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      if (typeof window.process !== 'undefined') {\n        // Electron\n        xhr.timeout = timeout;\n      }\n      // eslint-disable-next-line security/detect-non-literal-fs-filename\n      xhr.open(type, encodeURI(path));\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.onload = () => {\n        const newData = JSON.parse(xhr.responseText);\n        if (xhr.status === 200) {\n          resolve(newData.reason ? newData.reason : newData);\n        } else {\n          reject(newData.reason);\n        }\n      };\n      xhr.ontimeout = () => {\n        reject(new OfflineError());\n      };\n      xhr.onerror = () => {\n        reject(new OfflineError());\n      };\n      xhr.send(JSON.stringify(datas));\n    });\n  }\n\n  function doGET(path, timeout = 6000) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      if (typeof window.process !== 'undefined') {\n        // Electron\n        xhr.timeout = timeout;\n      }\n      xhr.open('GET', encodeURI(path));\n      xhr.onload = () => {\n        const datas = JSON.parse(xhr.responseText);\n        if (xhr.status === 200) {\n          resolve(datas);\n        } else {\n          reject(datas.reason);\n        }\n      };\n      xhr.ontimeout = () => {\n        reject(new OfflineError());\n      };\n      xhr.onerror = () => {\n        reject(new OfflineError());\n      };\n      xhr.send();\n    });\n  }\n\n  function doPOST(path, datas, timeout = 10000) {\n    return reqData(path, datas, 'POST', timeout);\n  }\n\n  function doPUT(path, datas, timeout = 10000) {\n    return reqData(path, datas, 'PUT', timeout);\n  }\n\n  function doDELETE(path, datas, timeout = 10000) {\n    return reqData(path, datas, 'DELETE', timeout);\n  }\n\n  class API {\n    constructor(link, getSHA256) {\n      if (link) {\n        this.db = link;\n      } else {\n        this.db = window.location.origin;\n      }\n      this.getSHA256 = getSHA256;\n    }\n\n    userExists(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then(\n        () => true,\n        () => false\n      );\n    }\n\n    addUser({\n      username,\n      privateKey,\n      publicKey,\n      privateKeySign,\n      publicKeySign,\n      pass,\n      options,\n    }) {\n      return this.getSHA256(username).then((hashedUsername) =>\n        doPOST(`${this.db}/user/${hashedUsername}`, {\n          pass,\n          privateKey,\n          publicKey,\n          privateKeySign,\n          publicKeySign,\n          keys: {},\n          options,\n        })\n      );\n    }\n\n    addSecret(user, secretObject) {\n      const json = JSON.stringify({\n        secret: secretObject.secret,\n        iv: secretObject.iv,\n        metadatas: secretObject.metadatas,\n        iv_meta: secretObject.iv_meta,\n        history: secretObject.history,\n        iv_history: secretObject.iv_history,\n        key: secretObject.wrappedKey,\n        title: secretObject.hashedTitle,\n      });\n      const now = Date.now();\n      return user.sign(`${json}|${now}`).then((signature) =>\n        doPOST(`${this.db}/secret/${secretObject.hashedUsername}`, {\n          json,\n          sig: signature,\n          sigTime: now,\n        })\n      );\n    }\n\n    deleteSecret(user, hashedTitle) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/secret/${hashedUsername}/${hashedTitle}`;\n          return user.sign(`DELETE ${url}|${now}`);\n        })\n        .then((signature) =>\n          doDELETE(`${this.db}${url}`, {\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    editSecret(user, secretObject, hashedTitle) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        iv: secretObject.iv,\n        secret: secretObject.secret,\n        iv_meta: secretObject.iv_meta,\n        metadatas: secretObject.metadatas,\n        iv_history: secretObject.iv_history,\n        history: secretObject.history,\n        title: hashedTitle,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/secret/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    newKey(user, hashedTitle, secret, wrappedKeys) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        wrappedKeys,\n        secret,\n        title: hashedTitle,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPOST(`${this.db}/newKey/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    unshareSecret(user, friendNames, hashedTitle) {\n      let hashedUsername;\n      const hashedFriendUsernames = [];\n      const datas = {\n        title: hashedTitle,\n      };\n      let json;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          const hashedFriendUseramePromises = [];\n          friendNames.forEach((username) => {\n            hashedFriendUseramePromises.push(this.getSHA256(username));\n          });\n          return Promise.all(hashedFriendUseramePromises);\n        })\n        .then((rHashedFriendUserames) => {\n          rHashedFriendUserames.forEach((hashedFriendUserame) => {\n            hashedFriendUsernames.push(hashedFriendUserame);\n          });\n          datas.friendNames = hashedFriendUsernames;\n          json = JSON.stringify(datas);\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPOST(`${this.db}/unshare/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    shareSecret(user, sharedSecretObjects) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        secretObjects: sharedSecretObjects,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPOST(`${this.db}/share/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    retrieveUser(username, hash, hashed) {\n      let isHashed = Promise.resolve();\n      let hashedUsername = username;\n      if (!hashed) {\n        isHashed = isHashed\n          .then(() => this.getSHA256(username))\n          .then((rHashedUsername) => {\n            hashedUsername = rHashedUsername;\n          });\n      }\n      return isHashed.then(() =>\n        doGET(`${this.db}/user/${hashedUsername}/${hash}`)\n      );\n    }\n\n    getDerivationParameters(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then((user) => ({\n        totp: user.pass.totp,\n        shortpass: user.pass.shortpass,\n        salt: user.pass.salt,\n        iterations: user.pass.iterations,\n      }));\n    }\n\n    getPublicKey(username, isHashed) {\n      return this.retrieveUser(username, 'undefined', isHashed).then(\n        (user) => user.publicKey\n      );\n    }\n\n    getUser(username, hash, otp) {\n      return this.getSHA256(username).then((hashedUsername) =>\n        doGET(`${this.db}/user/${hashedUsername}/${hash}?otp=${otp}`)\n      );\n    }\n\n    getUserWithSignature(user) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/user/${hashedUsername}`;\n          return user.sign(`${url}|${now}`);\n        })\n        .then((signature) =>\n          doGET(`${this.db}${url}?sig=${signature}&sigTime=${now}`, 0)\n        );\n    }\n\n    getSecret(hashedTitle, user) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/secret/${hashedUsername}/${hashedTitle}`;\n          return user.sign(`${url}|${now}`);\n        })\n        .then((signature) =>\n          doGET(`${this.db}${url}?sig=${signature}&sigTime=${now}`)\n        );\n    }\n\n    getHistory(user, hashedTitle) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/history/${hashedUsername}/${hashedTitle}`;\n          return user.sign(`${url}|${now}`);\n        })\n        .then((signature) =>\n          doGET(`${this.db}${url}?sig=${signature}&sigTime=${now}`)\n        )\n        .then((secret) => ({\n          iv: secret.iv_history,\n          secret: secret.history,\n        }));\n    }\n\n    getProtectKey(username, deviceName, hash) {\n      let hashedUsername;\n      return this.getSHA256(username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return this.getSHA256(deviceName);\n        })\n        .then((deviceId) =>\n          doGET(`${this.db}/protectKey/${hashedUsername}/${deviceId}/${hash}`)\n        )\n        .then((result) => {\n          // eslint-disable-next-line security/detect-possible-timing-attacks\n          if (hash === 'undefined') {\n            return result;\n          }\n          return result.protectKey;\n        });\n    }\n\n    getProtectKeyParameters(username, deviceName) {\n      return this.getProtectKey(username, deviceName, 'undefined');\n    }\n\n    getDb(user, revs) {\n      let url;\n      const json = JSON.stringify(revs);\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/database/${hashedUsername}`;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPOST(`${this.db}${url}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    getRescueCodes(user) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/rescueCodes/${hashedUsername}`;\n          return user.sign(`${url}|${now}`);\n        })\n        .then((signature) =>\n          doGET(`${this.db}${url}?sig=${signature}&sigTime=${now}`)\n        );\n    }\n\n    postRescueCodes(user, rescueCodes) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        rescueCodes,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/rescueCodes/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    editUser(user, datas) {\n      let hashedUsername;\n      const json = JSON.stringify(datas);\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/user/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    changePassword(user, privateKey, pass) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        pass,\n        privateKey,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/user/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    testTotp(seed, token) {\n      return doGET(`${this.db}/totp/${seed}/${token}`);\n    }\n\n    activateTotp(seed, user) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        seed,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/activateTotp/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    deactivateTotp(user) {\n      let url;\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((hashedUsername) => {\n          url = `/deactivateTotp/${hashedUsername}`;\n          return user.sign(`${url}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}${url}?sig=${signature}&sigTime=${now}`, {})\n        );\n    }\n\n    activateShortLogin(shortpass, user) {\n      let hashedUsername;\n      const json = JSON.stringify({\n        shortpass,\n      });\n      const now = Date.now();\n      return this.getSHA256(user.username)\n        .then((rHashedUsername) => {\n          hashedUsername = rHashedUsername;\n          return user.sign(`${json}|${now}`);\n        })\n        .then((signature) =>\n          doPUT(`${this.db}/activateShortLogin/${hashedUsername}`, {\n            json,\n            sig: signature,\n            sigTime: now,\n          })\n        );\n    }\n\n    isOnline() {\n      return doGET(`${this.db}/ping`);\n    }\n  }\n\n  Secretin.version = version;\n  Secretin.User = User;\n  Secretin.API = {\n    Standalone: API$1,\n    Server: API,\n  };\n\n  Secretin.Errors = Errors;\n  Secretin.Statuses = Statuses;\n  Secretin.Utils = Utils;\n\n  return Secretin;\n\n}));\n","import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.showShortpass = secretin.canITryShortLogin();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  window.location.reload();\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        if (error.message.startsWith('The password')) {\n          return dispatch(\n            createUserFailure({\n              error: { password: error.message },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  console.time('decrypt');\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => (dispatch, getState) => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus: {\n      const prevStatus = getState().AppUI.status;\n      if (prevStatus) {\n        const { state, total } = prevStatus;\n        if (\n          state &&\n          total &&\n          Math.round((status.state / status.total) * 100) ===\n            Math.round((state / total) * 100)\n        ) {\n          return; // Progress % did not change, prevent dispatch\n        }\n      }\n      return dispatch(onLoginUserProgress({ status }));\n    }\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      console.timeEnd('decrypt');\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Expired shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Modal from 'components/utilities/Modal';\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <>\n        <Modal.Header title=\"Welcome to Secret-in.me\" />\n        <Modal.Body>\n          <div>\n            <p>\n              <a\n                href=\"https://my.secret-in.me\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Secret-in.me\n              </a>{' '}\n              is a team-oriented{' '}\n              <a\n                href=\"https://github.com/secretin\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                open source\n              </a>{' '}\n              password manager with a focus on transparency, usability and\n              security.\n            </p>\n            <p>\n              If it&apos;s your first time here, you can create a user and start\n              saving your secrets.\n            </p>\n            <p>\n              Be careful, all your secrets will be protected by the password you\n              pick. There is <b>no way</b> to retrieve your secrets if you\n              forget your password !\n            </p>\n            <p>\n              This secret manager is freely provided with{' '}\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              by{' '}\n              <a\n                href=\"https://bug.builders\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Bug Builders.\n              </a>\n            </p>\n            <p>\n              If you enjoy it, please consider{' '}\n              <a\n                href=\"https://donorbox.org/secret-in-me/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>donating !</b>\n              </a>{' '}\n            </p>\n            <p>It&apos;ll help us support hosting costs (~50$ per month).</p>\n          </div>\n        </Modal.Body>\n      </>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Welcome from 'components/FooterModal/Welcome';\nimport { FormattedMessage } from 'react-intl';\n\nconst propTypes = {\n  hideNews: PropTypes.func,\n  acknowledgeVersion: PropTypes.func,\n  acknowledgedVersion: PropTypes.string,\n  news: PropTypes.array,\n  showModal: PropTypes.bool,\n};\n\nclass FooterModal extends Component {\n  render() {\n    return (\n      <Modal\n        show={this.props.showModal}\n        onClose={\n          this.props.acknowledgedVersion === null ? false : this.props.hideNews\n        }\n      >\n        {this.props.acknowledgedVersion === null ? (\n          <Welcome />\n        ) : (\n          <>\n            <Modal.Header title=\"What's new ?\" />\n            <Modal.Body>\n              {this.props.news.map(change => (\n                <div key={change.version}>\n                  <h2>{change.title}</h2>\n                  <p>{change.description}</p>\n                </div>\n              ))}\n            </Modal.Body>\n          </>\n        )}\n\n        <Modal.Footer>\n          {this.props.acknowledgedVersion !== null && (\n            <Button\n              type=\"reset\"\n              buttonStyle=\"default\"\n              onClick={this.props.hideNews}\n            >\n              <FormattedMessage id=\"Close\" />\n            </Button>\n          )}\n          <Button type=\"submit\" onClick={this.props.acknowledgeVersion}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nFooterModal.propTypes = propTypes;\n\nexport default FooterModal;\n","export function getStrings(locale) {\n  return messages[locale];\n}\n\nexport function getSupportedBrowserLocale() {\n  if (!window.navigator.language) return 'en';\n  if (supportedLocales[window.navigator.language])\n    return window.navigator.language;\n  return 'en';\n}\n\nexport const supportedLocales = {\n  en: 'English',\n  fr: 'Français',\n};\n\nexport const messages = {\n  en: {\n    login: 'Username',\n    password: 'Password',\n    'Sign up': 'Sign up',\n    'Sign in': 'Sign in',\n    confirmPassword: 'Confirm password',\n    alreadyHaveAccount: 'I already have an account',\n    SignInSubtext: 'sign in',\n    logout: 'Log out',\n    dontHaveAccount: \"I don't have an account\",\n    SignUpSubtext: 'create one',\n    defaultLanguage: 'Language',\n    donate: 'Donate',\n    all: 'All',\n    'my secrets': 'My secrets',\n    'shared secrets': 'Shared secrets',\n    settings: 'Settings',\n    'export secrets': 'Export secrets',\n    'import secrets': 'Importer secrets',\n    'new secret': 'Secret',\n    'new folder': 'Folder',\n    search: 'Search...',\n    'Last modified': 'Last modified',\n    'Shared with': 'Shared with',\n    Title: 'Title',\n    'create folder title': 'Add new folder',\n    'create secret title': 'Add new secret',\n    'add folder button': 'Add folder',\n    'add secret button': 'Add secret',\n    Close: 'Close',\n    shareWarning: 'You are about to give',\n    latest: '(latest)',\n    oldest: '(oldest)',\n    'Secret title': 'Secret title',\n    Copy: 'Copy',\n    Open: 'Open',\n    url: 'url',\n    to: 'to',\n    on: 'on',\n    'Share the secret': 'Share the secret',\n    'Read only': 'Read only',\n    'Read and write': 'Read and write',\n    'Read, write and share': 'Read, write and share',\n    \"You don't have the permission to share this secret\":\n      \"You don't have the permission to share this secret\",\n    \"You can't modify or remove yourself\":\n      \"You can't modify or remove yourself\",\n    'Generate strong': 'Generate strong',\n    'Generate alphanumeric': 'Generate alphanumeric',\n    'Generate pronounceable': 'Generate pronounceable',\n    Details: 'Details',\n    'Who has access': 'Who has access',\n    History: 'History',\n    Save: 'Save',\n    'Untitled secret': 'Untitled secret',\n    'Untitled folder': 'Untitled folder',\n    'Folder title': 'Folder title',\n    Cancel: 'Cancel',\n  },\n  fr: {\n    login: \"Nom d'utilisateur\",\n    password: 'Mot de passe',\n    'Sign up': 'Créer un compte',\n    'Sign in': 'Se connecter',\n    logout: 'Déconnexion',\n    confirmPassword: 'Confirmer le mot de passe',\n    alreadyHaveAccount: \"J'ai déjà un compte\",\n    SignInSubtext: 'me connecter',\n    dontHaveAccount: \"Je n'ai pas de compte\",\n    SignUpSubtext: \"m'enregistrer\",\n    defaultLanguage: \"Langue de l'interface\",\n    donate: 'Faire un don',\n    all: 'Tous les secrets',\n    'my secrets': 'Mes secrets',\n    'shared secrets': 'Secrets partagés',\n    settings: 'Paramètres',\n    'export secrets': 'Exporter mes secrets',\n    'import secrets': 'Importer des secrets',\n    'new secret': 'Secret',\n    'new folder': 'Dossier',\n    search: 'Rechercher...',\n    'Last modified': 'Dernière modification',\n    'Shared with': 'Partagé avec',\n    Title: 'Titre',\n    'create folder title': \"Ajout d'un dossier\",\n    'create secret title': \"Ajout d'un secret\",\n    'Folder title': 'Titre du dossier',\n    'Secret title': 'Titre du secret',\n    Cancel: 'Annuler',\n    'add folder button': 'Créer le dossier',\n    'add secret button': 'Créer le secret',\n    Copy: 'Copier',\n    'Untitled folder': 'Dossier sans titre',\n    'Untitled secret': 'Secret sans titre',\n    Open: 'Ouvrir',\n    Close: 'Fermer',\n    Details: 'Détails',\n    'Who has access': 'Partage',\n    History: 'Historique',\n    Save: 'Sauvegarder',\n    'read access': 'lecture',\n    'read and write access': 'lecture et écriture',\n    'read, write and share access': 'lecture, écriture et partage',\n    'Are you sure?': 'Êtes-vous sûr·e ?',\n    shareWarning: 'Vous vous apprêtez à donner les droits de',\n    to: 'à',\n    on: 'sur',\n    'Share the secret': 'Partager le secret',\n    'Read only': 'Lecture seule',\n    'Read and write': 'Lecture et écriture',\n    'Read, write and share': 'Lecture, écriture et partage',\n    \"You don't have the permission to share this secret\":\n      \"Vous n'avez pas la permission de partager ce secret\",\n    \"You can't modify or remove yourself\":\n      'Vous ne pouvez pas modifier vos propres permissions',\n    'Generate strong': 'Mot de passe fort',\n    'Generate alphanumeric': 'Mot de passe alphanumérique',\n    'Generate pronounceable': 'Mot de passe prononçable',\n    latest: '(le plus récent)',\n    oldest: '(le plus ancien)',\n    url: 'url',\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Secretin from 'secretin';\nimport FooterModal from 'components/FooterModal/index';\nimport { supportedLocales, getSupportedBrowserLocale } from '../i18n/strings';\nimport Select from 'components/utilities/Select';\n\nconst LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY = 'Secret-in:acknowledgedVersion';\nconst DEFAULT_DEVELOP_COMMITISH = 'develop';\n\nclass Footer extends Component {\n  static propTypes = {\n    onChangeLanguage: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n    // eslint-disable-next-line no-undef\n    const commit = SECRETIN_APP_COMMIT;\n\n    const acknowledgedVersion = window.localStorage.getItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY\n    );\n\n    this.state = {\n      commit,\n      acknowledgedVersion,\n      news: [],\n      showModal: acknowledgedVersion ? false : true,\n      defaultLanguage:\n        localStorage.getItem('defaultLanguage') || getSupportedBrowserLocale(),\n    };\n  }\n\n  showNews = () => this.setState({ showModal: true });\n\n  hideNews = () => this.setState({ showModal: false });\n\n  onChangeUserLanguage(newLanguage) {\n    localStorage.setItem('defaultLanguage', newLanguage);\n    this.setState({\n      defaultLanguage: newLanguage,\n    });\n    this.props.onChangeLanguage();\n  }\n\n  acknowledgeVersion = () => {\n    window.localStorage.setItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY,\n      this.state.commit\n    );\n    this.setState({\n      news: [],\n      acknowledgeVersion: this.state.commit,\n      showModal: false,\n    });\n  };\n\n  componentDidMount() {\n    if (this.state.acknowledgedVersion === null) {\n      return;\n    }\n\n    const somethingNew =\n      this.state.commit !== DEFAULT_DEVELOP_COMMITISH &&\n      this.state.acknowledgedVersion !== this.state.commit;\n    if (somethingNew) {\n      fetch(\n        'https://raw.githubusercontent.com/secretin/secretin-website/develop/changelog.json'\n      )\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          const news = [];\n          let foundAcknowledgedVersion = false;\n          for (const change of data.changelog) {\n            if (change.version === this.state.acknowledgedVersion) {\n              foundAcknowledgedVersion = true;\n              break;\n            }\n            news.push(change);\n          }\n\n          if (foundAcknowledgedVersion) {\n            this.setState({ news });\n          } else {\n            // If we didn't find the acknowledged version, then we didn't updated changelog properly\n            // we will just show the last change then\n            this.setState({ news: [data.changelog[0]] });\n          }\n        })\n        .catch(() => {\n          // Ignore error\n        });\n    }\n  }\n\n  render() {\n    const shortCommit = this.state.commit ? this.state.commit.substr(0, 7) : '';\n    const { defaultLanguage } = this.state;\n\n    return (\n      <div className=\"footer\">\n        <FooterModal\n          news={this.state.news}\n          acknowledgeVersion={this.acknowledgeVersion}\n          acknowledgedVersion={this.state.acknowledgedVersion}\n          hideNews={this.hideNews}\n          showModal={this.state.showModal}\n        />\n        <span className=\"secretin-version\">\n          {this.state.news.length > 0 && (\n            <span className=\"new-in-secretin-version\" onClick={this.showNews}>\n              •\n            </span>\n          )}\n          <span className=\"secretin-version-text\">\n            secretin-app{' '}\n            <a\n              href={`https://github.com/secretin/secretin-app/commit/${this.state.commit}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {shortCommit}\n            </a>\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            secretin-lib v{Secretin.version}\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            <a\n              href=\"https://donorbox.org/secret-in-me/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              <b>\n                <FormattedMessage id=\"donate\" />\n              </b>\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n            </a>\n          </span>\n        </span>\n        <Select\n          value={defaultLanguage}\n          label={<FormattedMessage id=\"defaultLanguage\" />}\n          options={Object.entries(\n            supportedLocales\n          ).map(([localeValue, localeName]) => [localeValue, localeName])}\n          size=\"extra-small\"\n          title={'Preferred language'}\n          onChange={({ value }) => this.onChangeUserLanguage(value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport Dropdown from 'components/utilities/Dropdown';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    autoCompleteFromList: PropTypes.array,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    autoCompleteFromList: [],\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      autoCompleteSelected: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    if (this.state.autoCompleteSelected) {\n      this.setState({ autoCompleteSelected: false });\n    }\n\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  handleAutoCompleteSelect(value) {\n    this.setState({ autoCompleteSelected: true });\n    this.props.onChange({ name: this.props.name, value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n      autoCompleteFromList,\n    } = this.props;\n\n    const filteredAutoCompleteList =\n      this.props.value.length > 0\n        ? autoCompleteFromList.filter(elem =>\n            elem.toLowerCase().includes(this.props.value.toLowerCase())\n          )\n        : [];\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? 'on' : 'off'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {!this.state.autoCompleteSelected &&\n            filteredAutoCompleteList.length > 0 && (\n              <Dropdown\n                id=\"input--auto-complete-list\"\n                open={Boolean(this.props.value.length > 0)}\n              >\n                <Dropdown.Menu>\n                  {filteredAutoCompleteList.slice(0, 5).map(elem => (\n                    <Dropdown.MenuItem\n                      key={elem}\n                      onSelect={() => this.handleAutoCompleteSelect(elem)}\n                    >\n                      {elem}\n                    </Dropdown.MenuItem>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n    savedUsername: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: props.savedUsername,\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? (\n      <FormattedMessage id=\"Sign up\" />\n    ) : (\n      <FormattedMessage id=\"Sign in\" />\n    );\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '70%' }}\n            alt=\"logo\"\n            title={this.props.isOnline ? 'Secret-In.me' : 'Offline'}\n          />\n        </h2>\n        <Input\n          name=\"username\"\n          label={<FormattedMessage id=\"login\" />}\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus={this.props.savedUsername === ''}\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label={<FormattedMessage id=\"password\" />}\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoFocus={this.props.savedUsername !== ''}\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label={<FormattedMessage id=\"confirmPassword\" />}\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        {this.props.errors.shortLoginExpired && (\n          <h3 className=\"tooltip\">\n            {this.props.errors.shortLoginExpired.message}\n            <Icon id=\"info\" size={13} />\n            <span className=\"tooltiptext\">\n              {this.props.errors.shortLoginExpired.info}\n            </span>\n          </h3>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                <FormattedMessage id=\"alreadyHaveAccount\" />\n                ,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  <FormattedMessage id=\"SignInSubtext\" />\n                </a>\n              </span>\n            ) : (\n              <span>\n                <FormattedMessage id=\"dontHaveAccount\" />\n                ,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  <FormattedMessage id=\"SignUpSubtext\" />\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport moment from 'moment';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const expirationEstimation = shortLoginActivationDate\n      ? ' (expires ' +\n        moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .fromNow() +\n        ')'\n      : '';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n        <Input\n          label={`Shortpass${expirationEstimation}`}\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\nimport moment from 'moment';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors, showShortpass } = this.props;\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const shortLoginExpired = shortLoginActivationDate\n      ? moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .isBefore(moment())\n      : false;\n\n    return (\n      <div className=\"user-connect\">\n        {showShortpass && !shortLoginExpired ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm\n            loading={loading}\n            savedUsername={savedUsername ? savedUsername : ''}\n            errors={{\n              ...errors,\n              ...(shortLoginActivationDate && shortLoginExpired\n                ? {\n                    shortLoginExpired: {\n                      message: `Your shortpass has expired `,\n                      info: `Previous shortpass will automatically reactivate for your account ${savedUsername} if you sign-in.`,\n                    },\n                  }\n                : {}),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass, status } = state.AppUI;\n  return {\n    showShortpass,\n    status,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '100%' }}\n            alt=\"logo\"\n            title={isOnline ? 'Secret-In.me' : 'Offline'}\n          ></img>\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            <FormattedMessage id=\"all\" />\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            <FormattedMessage id=\"my secrets\" />\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            <FormattedMessage id=\"shared secrets\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            <FormattedMessage id=\"settings\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              <FormattedMessage id=\"export secrets\" />\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            <FormattedMessage id=\"import secrets\" />\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a\n              className=\"sidebar-menu-link\"\n              onClick={() => window.location.reload()}\n            >\n              <Icon id=\"logout\" size=\"base\" />\n              <FormattedMessage id=\"logout\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce((record, field) => {\n      return record.addNewField(field);\n    }, new SecretDataRecord());\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n  const friendList = new Set();\n  Object.values(metadata).forEach(metadatum => {\n    Object.values(metadatum.users).forEach(user => {\n      friendList.add(user.username);\n    });\n  });\n  state.knownFriendList = Array.from(friendList).sort();\n};\n\nfunction getInitialState() {\n  return {\n    metadata: [],\n  };\n}\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: getInitialState(),\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  console.time('refresh');\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      console.timeEnd('refresh');\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nfunction getInitialState() {\n  return {\n    isEditing: false,\n    data: null,\n  };\n}\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Dropdown from 'components/utilities/Dropdown';\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.onGenerateAlphanum = this.onGenerateAlphanum.bind(this);\n    this.onGeneratePronounceable = this.onGeneratePronounceable.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword(),\n    });\n  }\n\n  onGenerateAlphanum() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword({\n        contentRules: {\n          numbers: true,\n          mixedCase: true,\n          symbols: false,\n        },\n      }),\n    });\n  }\n\n  onGeneratePronounceable() {\n    this.handleChange({\n      value: Utils.PasswordGenerator.generatePassword({\n        readable: true,\n      }),\n    });\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            <FormattedMessage id=\"Open\" />\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        <FormattedMessage id=\"Copy\" />\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.intl.formatMessage({ id: this.props.field.label })}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Dropdown id=\"password-generation-options\" pullRight>\n              <Dropdown.Toggle>\n                <Icon id=\"generate\" size=\"small\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.MenuItem onSelect={this.onGenerate}>\n                  <FormattedMessage id=\"Generate strong\" />\n                </Dropdown.MenuItem>\n                <Dropdown.MenuItem onSelect={this.onGenerateAlphanum}>\n                  <FormattedMessage id=\"Generate alphanumeric\" />\n                </Dropdown.MenuItem>\n                <Dropdown.MenuItem onSelect={this.onGeneratePronounceable}>\n                  <FormattedMessage id=\"Generate pronounceable\" />\n                </Dropdown.MenuItem>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SecretField);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && <FormattedMessage id=\"latest\" />}\n            {isOldest && <FormattedMessage id=\"oldest\" />}{' '}\n            {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'emerland',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'sun-flower',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n  intl: PropTypes.object,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n    intl,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [\n            rights,\n            intl.formatMessage({ id: userRightLabel(rights) }),\n          ])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport { injectIntl } from 'react-intl';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    knownFriendList: PropTypes.array,\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      this.props.intl.formatMessage({ id: 'read access' }),\n      this.props.intl.formatMessage({ id: 'read and write access' }),\n      this.props.intl.formatMessage({ id: 'read, write and share access' }),\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: this.props.intl.formatMessage({ id: 'Are you sure?' }),\n      text: (\n        <span>\n          {this.props.intl.formatMessage({ id: 'shareWarning' })}\n          &nbsp;<b>{rights}</b>&nbsp;\n          {this.props.intl.formatMessage({ id: 'to' })}\n          &nbsp;<b>{to}</b>&nbsp;\n          {this.props.intl.formatMessage({ id: 'on' })}\n          &nbsp;<b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: this.props.intl.formatMessage({ id: 'Share the secret' }),\n      cancelLabel: this.props.intl.formatMessage({ id: 'Cancel' }),\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder={`${this.props.intl.formatMessage({ id: 'login' })}...`}\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          autoCompleteFromList={this.props.knownFriendList}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [\n            rights,\n            this.props.intl.formatMessage({ id: userRightLabel(rights) }),\n          ])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { knownFriendList } = state.Metadata;\n  return {\n    knownFriendList,\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(SecretUserListNew));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser, intl) {\n  if (cantShare) {\n    return intl.formatMessage({\n      id: \"You don't have the permission to share this secret\",\n    });\n  } else if (isCurrentUser) {\n    return intl.formatMessage({ id: \"You can't modify or remove yourself\" });\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id,\n                this.props.intl\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n              intl={this.props.intl}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(SecretUserList));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={this.props.secret.title}\n            canEditTitle={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab\n                eventKey=\"details\"\n                title={this.props.intl.formatMessage({ id: 'Details' })}\n              >\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                    data={this.props.secret.fields}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab\n                eventKey=\"access\"\n                title={this.props.intl.formatMessage({ id: 'Who has access' })}\n              >\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n\n            {this.props.secret?.history?.length > 1 && (\n              <Tab\n                eventKey=\"history\"\n                title={this.props.intl.formatMessage({ id: 'History' })}\n              >\n                <SecretHistory />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            <FormattedMessage id={this.props.isEditing ? 'Cancel' : 'Close'} />\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              <FormattedMessage id=\"Save\" />\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(SecretShow));\n","import { getSupportedBrowserLocale } from './strings';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nexport const getLocale = () =>\n  localStorage.getItem('defaultLanguage') || getSupportedBrowserLocale();\n\nexport const setMomentLocale = () => moment.locale(getLocale());\n\nsetMomentLocale();\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport { createSecretSuccess, disconnectUserSuccess } from 'slices/AppUISlice';\nimport secretin from 'utils/secretin';\nimport { Utils } from 'secretin';\nimport { getLocale } from '../i18n/helpers';\nimport { getStrings } from '../i18n/strings';\n\nconst cache = createIntlCache();\n\nconst intl = createIntl(\n  {\n    locale: getLocale(),\n    messages: getStrings(getLocale()),\n  },\n  cache\n);\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = intl.formatMessage({\n        id: `Untitled ${isFolder ? 'folder' : 'secret'}`,\n      });\n      state.folder = folder;\n      state.isFolder = isFolder;\n      const loginIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'login'\n      );\n      const passwordIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'password'\n      );\n      state.data.fields[loginIndex].content =\n        secretin.currentUser.options?.defaultUsername ?? '';\n      state.data.fields[\n        passwordIndex\n      ].content = Utils.PasswordGenerator.generatePassword();\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport {\n  loginUserSuccess,\n  createUserSuccess,\n  disconnectUserSuccess,\n} from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeDefaultUsernameSuccess: (state, action) => {\n      const { defaultUsername } = action.payload;\n      state.options.defaultUsername = defaultUsername;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n    [createUserSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeDefaultUsernameSuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeDefaultUsername = ({ defaultUsername }) => (\n  dispatch,\n  getState\n) => {\n  secretin\n    .editOption('defaultUsername', defaultUsername)\n    .then(() => {\n      dispatch(changeDefaultUsernameSuccess({ defaultUsername }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n  extraReducers: {\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'AppUI/onLoginUserProgress',\n          'AppUI/loginUserSuccess',\n          'Metadata/addSecretToFolderSuccess',\n        ],\n        // Ignore these paths in the state\n        ignoredPaths: ['AppUI.currentUser', 'Metadata.metadata'],\n      },\n    }),\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  if (folder.root) return null;\n  return (\n    <div className=\"secret-list-folder\">\n      <div colSpan=\"4\" className=\"secret-list-folder-info\">\n        <SecretListBreadcrumb folders={folder.breadcrumb} withTitle={false} />\n      </div>\n    </div>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolderRows = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      let sortedFolders = Object.entries(filteredFolders).map(\n        ([id, folder]) => ({\n          ...folder,\n          id,\n        })\n      );\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n      sortedFolderRows = sortedFolders\n        .map(folder => {\n          const secrets = Object.values(folder.secrets);\n          secrets.sort((a, b) => {\n            if (a.title === null) return 1;\n            if (b.title === null) return -1;\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          });\n          return [\n            { rowType: 'header', rowData: folder },\n            ...secrets.map(secret => ({ rowType: 'row', rowData: secret })),\n          ];\n        })\n        .flat();\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    const renderFilteredRow = ({ index, key, style }) => {\n      const { rowType, rowData } = sortedFolderRows[index];\n      if (rowType === 'header') {\n        return (\n          <div key={key} style={style}>\n            <SecretListFolderInfo key={rowData.id} folder={rowData} />\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} style={style}>\n          <SecretListItemFolderSecret key={rowData.id} secret={rowData} />\n        </div>\n      );\n    };\n\n    const renderStandardRow = ({ index, key, style }) => {\n      const secret = filteredSecrets[index];\n      return (\n        <div key={key} style={style}>\n          <SecretListItem\n            key={secret.id}\n            secret={secret}\n            folders={this.props.folders}\n          />\n        </div>\n      );\n    };\n\n    const getRowHeight = ({ index }) => {\n      if (this.props.filtered && sortedFolderRows[index].rowType === 'header') {\n        const folder = sortedFolderRows[index].rowData;\n        if (folder.root) return 0;\n        return 75;\n      }\n      return 50;\n    };\n\n    return (\n      <div className={className}>\n        <AutoSizer>\n          {({ width, height }) => {\n            return (\n              <List\n                width={width}\n                height={height}\n                rowHeight={getRowHeight}\n                rowRenderer={\n                  this.props.filtered ? renderFilteredRow : renderStandardRow\n                }\n                rowCount={\n                  this.props.filtered\n                    ? sortedFolderRows.length\n                    : filteredSecrets.length\n                }\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header\n          title={\n            isFolder\n              ? this.props.intl.formatMessage({ id: 'create folder title' })\n              : this.props.intl.formatMessage({ id: 'create secret title' })\n          }\n        />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={\n                isFolder\n                  ? this.props.intl.formatMessage({ id: 'Folder title' })\n                  : this.props.intl.formatMessage({ id: 'Secret title' })\n              }\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            <FormattedMessage id=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? (\n              <FormattedMessage id=\"add folder button\" />\n            ) : (\n              <FormattedMessage id=\"add secret button\" />\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(SecretNew));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n  showAddFolder: PropTypes.bool,\n};\n\nfunction SecretListNew({ folder, showAddFolder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        <FormattedMessage id=\"new secret\" />\n      </Button>\n      {showAddFolder && (\n        <Button\n          title=\"Add folder\"\n          buttonStyle=\"primary\"\n          size=\"small\"\n          disabled={!canWrite}\n          onClick={() =>\n            dispatch(\n              NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n            )\n          }\n        >\n          <Icon id=\"add-folder\" size=\"small\" />\n          <FormattedMessage id=\"new folder\" />\n        </Button>\n      )}\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport { injectIntl } from 'react-intl';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder={this.props.intl.formatMessage({ id: 'search' })}\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SecretListSearch);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const status = _state.AppUI.status;\n  if (!status)\n    return {\n      show: false,\n    };\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    show: true,\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\nimport { FormattedMessage } from 'react-intl';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = <FormattedMessage id=\"all\" />;\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = <FormattedMessage id=\"my secrets\" />;\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = <FormattedMessage id=\"shared secrets\" />;\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        <UserConnectProgress />\n        <div className=\"page-content\">\n          <div className=\"page-content-actions\">\n            <SecretListNew\n              showAddFolder={\n                !this.props.showAll &&\n                !this.props.showMine &&\n                !this.props.showShared\n              }\n              folder={this.props.folder}\n            />\n          </div>\n          <div className=\"secret-list-content-table-header\">\n            <div>\n              <div className=\"secret-list-item-column--title\">\n                <FormattedMessage id=\"Title\" />\n              </div>\n              <div className=\"secret-list-item-column--last-modified\">\n                <FormattedMessage id=\"Last modified\" />\n              </div>\n              <div className=\"secret-list-item-column--shared-with\">\n                <FormattedMessage id=\"Shared with\" />\n              </div>\n              <div className=\"secret-list-item-column--actions\" />\n            </div>\n          </div>\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defaultMemoize } from 'reselect';\nimport equal from 'fast-deep-equal/es6';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nconst getFolders = defaultMemoize(\n  params => {\n    return params.path ? params.path.split('/') : [];\n  },\n  (previousVal, currentVal) => equal(previousVal, currentVal)\n);\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = getFolders(params);\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n    this.onChangeDefaultUsername = this.onChangeDefaultUsername.bind(this);\n    this.onSaveDefaultUsername = this.onSaveDefaultUsername.bind(this);\n    this.state = {\n      defaultUsername: props.options.defaultUsername,\n    };\n  }\n\n  onChangeDefaultUsername({ value }) {\n    this.setState({ defaultUsername: value });\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: value === '' ? -1 : parseInt(value, 10) || 0,\n    });\n  }\n\n  onSaveDefaultUsername() {\n    this.props.actions.changeDefaultUsername({\n      defaultUsername: this.state.defaultUsername,\n    });\n  }\n\n  render() {\n    const {\n      options,\n      isOnline,\n      options: { defaultUsername = '' },\n    } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Experience</h3>\n            <div className=\"options-section-item\">\n              <Input\n                name=\"defaultUsername\"\n                label=\"Default username\"\n                size=\"small\"\n                value={this.state.defaultUsername}\n                onChange={this.onChangeDefaultUsername}\n                disabled={!isOnline}\n              />\n              <div className=\"options-section-subitem-save\">\n                <Button\n                  type=\"button\"\n                  buttonStyle={\n                    this.state.defaultUsername === defaultUsername\n                      ? 'default'\n                      : 'primary'\n                  }\n                  onClick={this.onSaveDefaultUsername}\n                  size=\"small\"\n                  disabled={\n                    !isOnline || this.state.defaultUsername === defaultUsername\n                  }\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose !== 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {(options.timeToClose === -1 || options.timeToClose > 0) && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={\n                      options.timeToClose === -1\n                        ? ''\n                        : options.timeToClose.toString()\n                    }\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\nimport Footer from 'components/Footer';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nimport { IntlProvider } from 'react-intl';\nimport { getStrings } from '../i18n/strings';\nimport { getLocale, setMomentLocale } from '../i18n/helpers';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => window.location.reload(),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    setMomentLocale();\n    return (\n      <IntlProvider\n        locale={getLocale()}\n        defaultLocale={getLocale()}\n        messages={getStrings(getLocale())}\n      >\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            {this.props.connected ? (\n              <Layout />\n            ) : (\n              <UserConnect\n                savedUsername={this.props.savedUsername}\n                loading={this.props.loading}\n                errors={this.props.errors}\n              />\n            )}\n            <Footer onChangeLanguage={() => this.forceUpdate()} />\n          </div>\n        </Router>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './utils/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}